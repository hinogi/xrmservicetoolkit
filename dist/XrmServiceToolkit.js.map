{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 7d9638ecf92506858aba","webpack:///./src/Index.ts","webpack:///./src/Rest.ts","webpack:///./src/HelperRest.ts","webpack:///./src/Helper.ts","webpack:///./src/ParameterCheck.ts","webpack:///./src/Soap.ts","webpack:///./src/HelperSoap.ts","webpack:///./src/Extension.ts"],"names":[],"mappings":"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","file":"XrmServiceToolkit.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"XrmServiceToolkit\"] = factory();\n\telse\n\t\troot[\"XrmServiceToolkit\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 7d9638ecf92506858aba\n **/","/// <reference path=\"../typings/main.d.ts\" />\n\n/**\n* MSCRM 2015, 2013, 2011 Web Service Toolkit for JavaScript\n* @author Jaimie Ji\n* @author David Berry\n* @current version : 2.2.1\n\n* Credits:\n*   The idea of this library was inspired by Daniel Cai's CrmWebServiceToolkit.\n*   The idea of BusinessEntity was inspired by Daniel Cai && Ascentium CrmService JavaScript Library.\n*   The REST Endpoint functions were inspired by MSCRM 2011 SDK JavaScript code and various resources from CRM websites and forums. Some of them were just copies with minor modification.\n*   The Soap functions were inspired by Daniel Cai && Jamie Miley && Paul Way && Customer Effective.\n*   Additional thanks to all contributors of MSCRM and i have learned a lot from you all.\n* Date: February, 2012\n*\n* Special Thanks:\n*   JetBrains ReSharper Open License\n* Date: July, 2012\n*\n* What's new:\n**********************************************************************************************************\n*   Version: 1.1\n*   Date: April, 2012\n*       Dependency: JSON2\n*       New Function - XrmServiceToolkit.Soap.Assign\n*       New Function - XrmServiceToolkit.Soap.GrantAccess\n*       New Function - XrmServiceToolkit.Soap.ModifyAccess\n*       New Function - XrmServiceToolkit.Soap.GrantAccess\n*       New Function - XrmServiceToolkit.Soap.RetrievePrincipalAccess\n**********************************************************************************************************\n*   Version: 1.2\n*   Date: April, 2012\n*       Dependency: JSON2\n*       New Fix - Fix soaps functions to create/update/retrieve activities with Party List fields.\n**********************************************************************************************************\n*   Version: 1.3\n*   Date: July, 2012\n*       Dependency: JSON2, jQuery (latest or 1.7.2 above)\n*       New Feature: cross browser support. jQuery Integration.\n*       New Extension: A new category of functions to extend some functions:\n*          1. JQueryXrmDependentOptionSet: Create Configurable Dependent Option Set to utilize CRM 2011 web resource.\n*          2. JQueryXrmFieldTooltip: Create configurable tooltip for fields on CRM 2011 form\n*          3. JQueryXrmCustomFilterView: Create configurable ability to add custom filter view to crm 2011 lookup field on the form\n*          4. JQueryXrmFormatNotesControl: Format the notes control to allow insert, allow edit\n**********************************************************************************************************\n*   Version: 1.3.1\n*   Date: November, 2012\n*       Dependency: JSON2, jQuery (latest or 1.7.2 above)\n*       New Feature - A change of logic to increase performance when returning large number of records\n*       New Function - XrmServiceToolkit.Soap.QueryAll: Return all available records by query options (>5k+)\n*       New Fix - XrmServiceToolkit.Rest.RetrieveMultiple not returning records more than 50\n*       New Fix - XrmServiceToolkit.Soap.Business error when referring number fields like (int, double, float)\n*       New Fix - XrmServiceToolkit.Soap not handling error message properly\n**********************************************************************************************************\n*   Version: 1.3.2\n*   Date: January, 2013\n*       Dependency: JSON2, jQuery (latest or 1.7.2 above)\n*       New Fix - XrmServiceToolkit.Soap cross browser support to initialize soap service\n**********************************************************************************************************\n*   Version: 1.4.0\n*   Date: January, 2013\n*       Dependency: JSON2, jQuery (latest or 1.7.2 above)\n*       Feature: Add Cross Browser Support for RU12\n*       Tested Platform: IE9, IE10, Chrome Version 24.0.1312.56 m, Firefox 18.0.1\n**********************************************************************************************************\n*   Version: 1.4.1\n*   Date: April, 2013\n*       Dependency: JSON2, jQuery (latest or 1.7.2 above)\n*       Tested Platform: IE9, IE10, Chrome Version 26.0.1410.64 m, Firefox 20.0.1\n*       Feature: Add Cross Browser Support for RU12, RU13\n*       New Fix - XrmServiceToolkit.Common.AddNotification method updated for RU12, RU13, still compatible for RU11 below\n*       New Fix - XrmServiceToolkit.Soap.Fetch method did not format linked record correctly\n*       New Fix - XrmServiceToolkit.Soap.Retrieve method did not return partylist data for activity\n*       New Fix - Added manual conversion from String to Date conversion for cross browser\n*       New Fix - getServerUrl method is updated as getClientUrl to align with RU12 SDK method getClientUrl(), still compatible to support RU11 below\n*       New Function - getServerUrl private method is updated as getClientUrl to align with RU12 SDK method getClientUrl(), still compatible to support RU11 below\n*       New Function - XrmServiceToolkit.Soap.RetrieveAllEntitiesMetadata method is a method to return all metadata for all entities by the specified entity filters\n*       New Function - XrmServiceToolkit.Soap.RetrieveEntityMetadata method is a method to return the metadata for a certain entity by the specified entity filters\n*       New Function - XrmServiceToolkit.Soap.RetrieveAttributeMetadata method is a method to return the metadata for a certain entity's attribute\n**********************************************************************************************************\n*   Version: 1.4.2 (beta)\n*   Date: May, 2013\n*       Dependency: JSON2, jQuery (latest or 1.7.2 above)\n*       Tested Platform: IE10\n*       New Fix - XrmServiceToolkit.Soap.Fetch now takes an additional parameter, 'fetchAll', that when set to true will retrieve all pages of results\n*       New Behaviour - XrmServiceToolkit.Soap.Fetch works best when providing a FetchXML string starting with the \"entity\" node, because of the way paging works;\n*           It will still function with the traditional \"fetch\" node to start, but then the XML has to be parsed to select just the \"entity\" node, which adds some overhead.\n*       New Behaviour - XrmServiceToolkit fetch and queryall methods use a unified model, and some redundant code has been removed.  This allows better paging operations.\n*\n**********************************************************************************************************\n*   Version: 2.0.0 (beta)\n*   Date: October, 2013\n*       Dependency: JSON2, jQuery (latest or 1.7.2 above)\n*       ---NOTE---Due to the changes for CRM 2013, please use the attached version of JSON2 and jQuery\n*       Tested Platform: IE10, latest Chrome, latest FireFox\n*    Changes:\n*       New Behaviour - XrmServiceTookit.Soap.Fetch parameters change to work with asynchronous callback compared to 1.4.2 beta: XrmServiceToolkit.Soap.Fetch(fetchXml, fetchAll, callback)\n*       New Behaviour - XrmServiceTookit.Soap.AddNotification is working with CRM 2013 using the out-of-box functionality. Still support CRM 2011\n*       New Fix - XrmServiceToolkit.Common.GetObjectCodeType is now using metadata retrieval as a supported method\n*       New Fix - The included jQuery has a line changed at the bottom <window.jQuery = jQuery;> $ is removed to work with CRM 2013 form\n*   Beta Release for CRM 2013\n**********************************************************************************************************\n*   Version: 2.0.1 (beta)\n*   Date: April, 2014\n*       Dependency: JSON2, jQuery (latest or 1.7.2 above)\n*       ---NOTE---Due to the changes for CRM 2013, please use the attached version of JSON2 and jQuery\n*       Tested Platform: IE11, IE10, latest Chrome, latest FireFox\n*    Changes:\n*       New Behaviour - XrmServiceTookit.Soap.Fetch method will allow 'page' and 'count' parameter to limit the returned records.\n*       New Fix - XrmServiceToolkit.Soap.Fetch fix an error when passing difference formats of Fetch XML with/without '<fetch>..' statements\n*       New Fix - XrmServiceToolkit.Extension methods error when retrieving web resources\n*   Beta Release for CRM 2013\n**********************************************************************************************************\n*   Version: 2.1\n*   Date: September, 2014\n*       Dependency: JSON2, jQuery (latest or 1.7.2 above)\n*       ---NOTE---Due to the changes for CRM 2013, please use the attached version of JSON2 and jQuery\n*       Tested Platform: IE11, IE10, latest Chrome, latest FireFox\n*    Changes:\n*       Performance Refactor\n*       New Fix - XrmServiceToolkit.Common.DisableAllControlsInTab to support CRM2013 changes\n*   Beta Release for CRM 2013\n**********************************************************************************************************\n*   Version: 2.2\n*   Date: April, 2015\n*       Dependency: JSON2, jQuery (latest or 1.7.2 above)\n*       ---NOTE---Due to the changes for CRM 2013, please use the attached version of JSON2 and jQuery\n*       Tested Platform: IE11, IE10, latest Chrome, latest FireFox\n*    Changes:\n*       CRM 2015 release\n*       New Fix - Error Handling\n*       New Fix - XrmServiceToolkit.Soap.Fetch aggregate fix\n*       New Fix - XrmServiceToolkit.Soap.Fetch distinct support\n*       New Fix - Aliased Values Handling\n*   Stable Release for CRM 2013, CRM 2015\n**********************************************************************************************************\n*   Version: 2.2.1\n*   Date: May, 2015\n*       Dependency: JSON2, jQuery (latest or 1.7.2 above)\n*       ---NOTE---Due to the changes for CRM 2013, please use the attached version of JSON2 and jQuery\n*       Tested Platform: IE11, IE10, latest Chrome, latest FireFox\n*    Changes:\n*       CRM 2015 7.1 release\n*       New Fix - Added logic for EntityReference in SOAP for 7.1 changes\n*   Beta Release for CRM 2015 online Update 1\n**********************************************************************************************************\n*/\n\nexport {default as Rest} from \"./Rest\";\nexport {default as Soap} from \"./Soap\";\nexport {default as Extension} from \"./Extension\";\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/Index.ts\n **/","/// <reference path=\"../typings/main.d.ts\" />\n\nimport {oDataPath, dateReviver, errorHandler, getXhr, performRequest} from \"./HelperRest\";\nimport {parameterCheck, stringParameterCheck, booleanParameterCheck, callbackParameterCheck} from \"./ParameterCheck\";\n\n        // RetrieveMultiple: retrieveMultipleRecords,\n        // Associate: associateRecord,\n        // Disassociate: disassociateRecord\nexport default class Rest {\n    /**\n     * Sends synchronous/asynchronous request to create a new record\n     *\n     * @param {Object} object A JavaScript object with properties corresponding to the Schema name of\n     * entity attributes that are valid for create operations\n     * @param {string} type A String representing the name of the entity\n     * @param {Function} successCallback The function that will be passed through and be called by a successful * * response.\n     * This function can accept the returned record as a parameter.\n     * @param {Function} errorCallback The function that will be passed through and be called by a failed\n     * response.\n     * This function must accept an Error object as a parameter.\n     * @param {boolean} async A Boolean representing if the method should run asynchronously or synchronously\n     * true means asynchronously. false means synchronously\n     */\n    static Create(object: Object, type: string, successCallback: Function, errorCallback: Function, async:boolean): void {\n        parameterCheck(object, \"XrmServiceToolkit.REST.createRecord requires the object parameter.\");\n        stringParameterCheck(type, \"XrmServiceToolkit.REST.createRecord requires the type parameter is a string.\");\n        callbackParameterCheck(successCallback, \"XrmServiceToolkit.REST.createRecord requires the successCallback is a function.\");\n        callbackParameterCheck(errorCallback, \"XrmServiceToolkit.REST.createRecord requires the errorCallback is a function.\");\n        booleanParameterCheck(async, \"XrmServiceToolkit.REST.createRecord requires the async is a boolean.\");\n\n        let req: XMLHttpRequest = <XMLHttpRequest>getXhr();\n        req.open(\"POST\", oDataPath() + type, async);\n        req.setRequestHeader(\"Accept\", \"application/json\");\n        req.setRequestHeader(\"Content-Type\", \"application/json; charset=utf-8\");\n\n        if (async) {\n            req.onreadystatechange = () => {\n                if (req.readyState === 4 /* complete */) {\n                    req.onreadystatechange = null;\n                    if (req.status === 201) {\n                        successCallback(JSON.parse(req.responseText, dateReviver).d);\n                    } else {\n                        errorCallback(errorHandler(req));\n                    }\n                }\n            };\n            req.send(JSON.stringify(object));\n        } else {\n            req.send(JSON.stringify(object));\n            if (req.status === 201) {\n                successCallback(JSON.parse(req.responseText, dateReviver).d);\n            } else {\n                errorCallback(errorHandler(req));\n            }\n        }\n    }\n\n    /**\n     * Sends synchronous/asynchronous request to retrieve a record\n     *\n     * @param {string} id A String representing the GUID value for the record to retrieve\n     * @param {string} type A String representing the name of the entity\n     * @param {string} select A String representing the $select OData System Query Option to control which\n     * attributes will be returned. This is a comma separated list of Attribute names that are valid for retrieve.\n     * If null all properties for the record will be returned\n     * @param {string} expand  String representing the $expand OData System Query Option value to control which\n     * related records are also returned. This is a comma separated list of of up to 6 entity relationship names\n     * If null no expanded related records will be returned.\n     * @param {Function} successCallback The function that will be passed through and be called by a successful response.\n     * This function must accept the returned record as a parameter.\n     * @param {Function} errorCallback The function that will be passed through and be called by a failed response.\n     * This function must accept an Error object as a parameter.\n     * @param {boolean} async A Boolean representing if the method should run asynchronously or synchronously\n     * true means asynchronously. false means synchronously\n     */\n    static Retrieve(id: string, type: string, select: string, expand: string, successCallback: Function, errorCallback: Function, async: boolean): void {\n        stringParameterCheck(id, \"XrmServiceToolkit.REST.retrieveRecord requires the id parameter is a string.\");\n        stringParameterCheck(type, \"XrmServiceToolkit.REST.retrieveRecord requires the type parameter is a string.\");\n        if (select != null)\n            stringParameterCheck(select, \"XrmServiceToolkit.REST.retrieveRecord requires the select parameter is a string.\");\n        if (expand != null)\n            stringParameterCheck(expand, \"XrmServiceToolkit.REST.retrieveRecord requires the expand parameter is a string.\");\n        callbackParameterCheck(successCallback, \"XrmServiceToolkit.REST.retrieveRecord requires the successCallback parameter is a function.\");\n        callbackParameterCheck(errorCallback, \"XrmServiceToolkit.REST.retrieveRecord requires the errorCallback parameter is a function.\");\n        booleanParameterCheck(async, \"XrmServiceToolkit.REST.retrieveRecord requires the async parameter is a boolean.\");\n\n        let systemQueryOptions = \"\";\n\n        if (select != null || expand != null) {\n            systemQueryOptions = \"?\";\n            if (select != null) {\n                let selectString = \"$select=\" + select;\n                if (expand != null) {\n                    selectString = selectString + \",\" + expand;\n                }\n                systemQueryOptions = systemQueryOptions + selectString;\n            }\n            if (expand != null) {\n                systemQueryOptions = systemQueryOptions + \"&$expand=\" + expand;\n            }\n        }\n\n        let req: XMLHttpRequest = <XMLHttpRequest>getXhr();\n        req.open(\"GET\", oDataPath() + type + \"(guid'\" + id + \"')\" + systemQueryOptions, async);\n        req.setRequestHeader(\"Accept\", \"application/json\");\n        req.setRequestHeader(\"Content-Type\", \"application/json; charset=utf-8\");\n\n        if (async) {\n            req.onreadystatechange = () => {\n                if (req.readyState === 4 /* complete */) {\n                    if (req.status === 200) {\n                        successCallback(JSON.parse(req.responseText, dateReviver).d);\n                    } else {\n                        errorCallback(errorHandler(req));\n                    }\n                }\n            };\n            req.send();\n        } else {\n            req.send();\n            if (req.status === 200) {\n                successCallback(JSON.parse(req.responseText, dateReviver).d);\n            }\n            else {\n                errorCallback(errorHandler(req));\n            }\n        }\n\n    };\n\n    /**\n     * Sends synchronous/asynchronous request to update a record\n     *\n     * @param {string} id A String representing the GUID value for the record to update\n     * @param {Object} object A JavaScript object with properties corresponding to the Schema name of\n     * entity attributes that are valid for create operations\n     * @param {string} type A String representing the name of the entity\n     * @param {Function} successCallback The function that will be passed through and be called by a successful response.\n     * Nothing will be returned to this function\n     * @param {Function} errorCallback The function that will be passed through and be called by a failed response.\n     * This function must accept an Error object as a parameter\n     * @param {boolean} async A Boolean representing if the method should run asynchronously or synchronously\n     * true means asynchronously. false means synchronously\n     */\n    static Update(id: string, object: Object, type: string, successCallback: Function, errorCallback: Function, async: boolean): void {\n        stringParameterCheck(id, \"XrmServiceToolkit.REST.updateRecord requires the id parameter.\");\n        parameterCheck(object, \"XrmServiceToolkit.REST.updateRecord requires the object parameter.\");\n        stringParameterCheck(type, \"XrmServiceToolkit.REST.updateRecord requires the type parameter.\");\n        callbackParameterCheck(successCallback, \"XrmServiceToolkit.REST.updateRecord requires the successCallback is a function.\");\n        callbackParameterCheck(errorCallback, \"XrmServiceToolkit.REST.updateRecord requires the errorCallback is a function.\");\n        booleanParameterCheck(async, \"XrmServiceToolkit.REST.updateRecord requires the async parameter is a boolean.\");\n\n        let req: XMLHttpRequest = <XMLHttpRequest>getXhr();\n\n        req.open(\"POST\", oDataPath() + type + \"(guid'\" + id + \"')\", async);\n        req.setRequestHeader(\"Accept\", \"application/json\");\n        req.setRequestHeader(\"Content-Type\", \"application/json; charset=utf-8\");\n        req.setRequestHeader(\"X-HTTP-Method\", \"MERGE\");\n\n        if (async) {\n            req.onreadystatechange = () => {\n                if (req.readyState === 4 /* complete */) {\n                    if (req.status === 204 || req.status === 1223) {\n                        successCallback();\n                    } else {\n                        errorCallback(errorHandler(req));\n                    }\n                }\n            };\n            req.send(JSON.stringify(object));\n        } else {\n            req.send(JSON.stringify(object));\n            if (req.status === 204 || req.status === 1223) {\n                successCallback();\n            }\n            else {\n                errorCallback(errorHandler(req));\n            }\n        }\n    }\n\n    /**\n     * Sends synchronous/asynchronous request to delete a record\n     *\n     * @param {string} id A String representing the GUID value for the record to delete\n     * @param {string} type A String representing the name of the entity\n     * @param {Function} successCallback The function that will be passed through and be called by a successful response.\n     * Nothing will be returned to this function\n     * @param {Function} errorCallback The function that will be passed through and be called by a failed response.\n     * This function must accept an Error object as a parameter\n     * @param {boolean} async A Boolean representing if the method should run asynchronously or synchronously\n     * true means asynchronously. false means synchronously\n     */\n    static Delete(id: string, type: string, successCallback: Function, errorCallback: Function, async: boolean): void {\n        stringParameterCheck(id, \"XrmServiceToolkit.REST.deleteRecord requires the id parameter.\");\n        stringParameterCheck(type, \"XrmServiceToolkit.REST.deleteRecord requires the type parameter.\");\n        callbackParameterCheck(successCallback, \"XrmServiceToolkit.REST.deleteRecord requires the successCallback is a function.\");\n        callbackParameterCheck(errorCallback, \"XrmServiceToolkit.REST.deleteRecord requires the errorCallback is a function.\");\n        booleanParameterCheck(async, \"XrmServiceToolkit.REST.deleteRecord requires the async parameter is a boolean.\");\n\n        let req: XMLHttpRequest = <XMLHttpRequest>getXhr();\n        req.open(\"POST\", oDataPath() + type + \"(guid'\" + id + \"')\", async);\n        req.setRequestHeader(\"Accept\", \"application/json\");\n        req.setRequestHeader(\"Content-Type\", \"application/json; charset=utf-8\");\n        req.setRequestHeader(\"X-HTTP-Method\", \"DELETE\");\n\n        if (async) {\n            req.onreadystatechange = () => {\n                if (req.readyState === 4 /* complete */) {\n                    if (req.status === 204 || req.status === 1223) {\n                        successCallback();\n                    } else {\n                        errorCallback(errorHandler(req));\n                    }\n                }\n            };\n            req.send();\n        } else {\n            req.send();\n            if (req.status === 204 || req.status === 1223) {\n                successCallback();\n            } else {\n                errorCallback(errorHandler(req));\n            }\n        }\n    }\n\n    /**\n     * Sends synchronous/asynchronous request to retrieve records\n     *\n     * @param {string} type The Schema Name of the Entity type record to retrieve.\n     * For an Account record, use \"Account\"\n     * @param {string} options A String representing the OData System Query Options to control the data returned\n     * @param {Function} successCallback The function that will be passed through and be called for each page of records returned.\n     * Each page is 50 records. If you expect that more than one page of records will be returned,\n     * this function should loop through the results and push the records into an array outside of the function.\n     * Use the OnComplete event handler to know when all the records have been processed\n     * @param {Function} errorCallback The function that will be passed through and be called by a failed response.\n     * This function must accept an Error object as a parameter\n     * @param {Function} onComplete The function that will be called when all the requested records have been returned.\n     * No parameters are passed to this function\n     * @param {boolean} async A Boolean representing if the method should run asynchronously or synchronously\n     * true means asynchronously. false means synchronously\n     */\n    static RetrieveMultiple(type: string, options: string, successCallback: Function, errorCallback: Function, onComplete: Function, async: boolean): void {\n        stringParameterCheck(type, \"XrmServiceToolkit.REST.retrieveMultipleRecords requires the type parameter is a string.\");\n        if (options != null)\n            stringParameterCheck(options, \"XrmServiceToolkit.REST.retrieveMultipleRecords requires the options parameter is a string.\");\n        callbackParameterCheck(successCallback, \"XrmServiceToolkit.REST.retrieveMultipleRecords requires the successCallback parameter is a function.\");\n        callbackParameterCheck(errorCallback, \"XrmServiceToolkit.REST.retrieveMultipleRecords requires the errorCallback parameter is a function.\");\n        callbackParameterCheck(onComplete, \"XrmServiceToolkit.REST.retrieveMultipleRecords requires the OnComplete parameter is a function.\");\n        booleanParameterCheck(async, \"XrmServiceToolkit.REST.retrieveMultipleRecords requires the async parameter is a boolean.\");\n\n        let optionsString = \"\";\n        if (options != null) {\n            if (options.charAt(0) !== \"?\") {\n                optionsString = \"?\" + options;\n            } else {\n                optionsString = options;\n            }\n        }\n\n        let req: XMLHttpRequest = <XMLHttpRequest>getXhr();\n        req.open(\"GET\", oDataPath() + type + optionsString, async);\n        req.setRequestHeader(\"Accept\", \"application/json\");\n        req.setRequestHeader(\"Content-Type\", \"application/json; charset=utf-8\");\n\n        if (async) {\n            req.onreadystatechange = () => {\n                if (req.readyState === 4 /* complete */) {\n                    if (req.status === 200) {\n                        let returned = JSON.parse(req.responseText, dateReviver).d;\n                        successCallback(returned.results);\n                        if (returned.__next == null) {\n                            onComplete();\n                        } else {\n                            let queryOptions = returned.__next.substring((oDataPath() + type).length);\n                            this.RetrieveMultiple(type, queryOptions, successCallback, errorCallback, onComplete, async);\n                        }\n                    } else {\n                        errorCallback(errorHandler(req));\n                    }\n                }\n            };\n            req.send();\n        } else {\n            req.send();\n            if (req.status === 200) {\n                let returned = JSON.parse(req.responseText, dateReviver).d;\n                successCallback(returned.results);\n                if (returned.__next == null) {\n                    onComplete();\n                } else {\n                    let queryOptions = returned.__next.substring((oDataPath() + type).length);\n                    this.RetrieveMultiple(type, queryOptions, successCallback, errorCallback, onComplete, async);\n                }\n            } else {\n                errorCallback(errorHandler(req));\n            }\n        }\n    }\n\n    /**\n     * Sends synchronous/asynchronous request to associate a record\n     *\n     * @param {string} entityid1 A String representing the GUID value for the record to associate\n     * @param {string} odataSetName1 A String representing the odataset name for entityid1\n     * @param {string} entityid2 A String representing the GUID value for the record to be associated\n     * @param {string} odataSetName2 A String representing the odataset name for entityid2\n     * @param {string} relationship A String representing the name of the relationship for association\n     * @param {Function} successCallback The function that will be passed through and be called by a successful response.\n     * Nothing will be returned to this function\n     * @param {Function} errorCallback The function that will be passed through and be called by a failed response.\n     * This function must accept an Error object as a parameter\n     * @param {boolean} async A Boolean representing if the method should run asynchronously or synchronously\n     * true means asynchronously. false means synchronously\n     */\n    static Associate(entityid1: string, odataSetName1: string, entityid2: string, odataSetName2: string, relationship: string, successCallback: Function, errorCallback: Function, async: boolean): void {\n        parameterCheck(entityid1, \"XrmServiceToolkit.REST.associateRecord requires the entityid1 parameter.\");\n        parameterCheck(odataSetName1, \"XrmServiceToolkit.REST.associateRecord requires the odataSetName1 parameter.\");\n        parameterCheck(entityid2, \"XrmServiceToolkit.REST.associateRecord requires the entityid2 parameter.\");\n        parameterCheck(odataSetName2, \"XrmServiceToolkit.REST.associateRecord requires the odataSetName2 parameter.\");\n        parameterCheck(relationship, \"XrmServiceToolkit.REST.associateRecord requires the relationship parameter.\");\n        callbackParameterCheck(successCallback, \"XrmServiceToolkit.REST.associateRecord requires the successCallback is a function.\");\n        callbackParameterCheck(errorCallback, \"XrmServiceToolkit.REST.associateRecord requires the errorCallback is a function.\");\n        booleanParameterCheck(async, \"XrmServiceToolkit.REST.associateRecord requires the async parameter is a boolean\");\n\n        let entity2: any = {};\n        entity2.uri = oDataPath() + \"/\" + odataSetName2 + \"(guid'\" + entityid2 + \"')\";\n        let jsonEntity = JSON.stringify(entity2);\n\n        performRequest({\n            type: \"POST\",\n            url: oDataPath() + \"/\" + odataSetName1 + \"(guid'\" + entityid1 + \"')/$links/\" + relationship,\n            data: jsonEntity,\n            success: successCallback,\n            error: errorCallback,\n            async: async\n        });\n    }\n\n    /**\n     * Sends synchronous/asynchronous request to disassociate a record\n     *\n     * @param {string} entityid1 A String representing the GUID value for the record to disassociate\n     * @param {string} odataSetName A String representing the odataset name for entityid1\n     * @param {string} entityid2 A String representing the GUID value for the record to be disassociated\n     * @param {string} relationship A String representing the name of the relationship for disassociation\n     * @param {Function} successCallback The function that will be passed through and be called by a successful response.\n     * Nothing will be returned to this function\n     * @param {Function} errorCallback The function that will be passed through and be called by a failed response.\n     * This function must accept an Error object as a parameter\n     * @param {boolean} async A Boolean representing if the method should run asynchronously or synchronously\n     * true means asynchronously. false means synchronously\n     */\n    static Disassociate(entityid1: string, odataSetName: string, entityid2: string, relationship: string, successCallback: Function, errorCallback: Function, async: boolean): void {\n        parameterCheck(entityid1, \"XrmServiceToolkit.REST.disassociateRecord requires the entityid1 parameter.\");\n        parameterCheck(odataSetName, \"XrmServiceToolkit.REST.disassociateRecord requires the odataSetName parameter.\");\n        parameterCheck(entityid2, \"XrmServiceToolkit.REST.disassociateRecord requires the entityid2 parameter.\");\n        parameterCheck(relationship, \"XrmServiceToolkit.REST.disassociateRecord requires the relationship parameter.\");\n        callbackParameterCheck(successCallback, \"XrmServiceToolkit.REST.disassociateRecord requires the successCallback is a function.\");\n        callbackParameterCheck(errorCallback, \"XrmServiceToolkit.REST.disassociateRecord requires the errorCallback is a function.\");\n        booleanParameterCheck(async, \"XrmServiceToolkit.REST.disassociateRecord requires the async parameter is a boolean.\");\n\n        var url = oDataPath() + \"/\" + odataSetName + \"(guid'\" + entityid1 + \"')/$links/\" + relationship + \"(guid'\" + entityid2 + \"')\";\n        performRequest({\n            url: url,\n            type: \"POST\",\n            action: \"DELETE\",\n            error: errorCallback,\n            success: successCallback,\n            async: async\n        });\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/Rest.ts\n **/","import {getClientUrl, alertMessage, htmlEncode} from \"./Helper\";\nimport {parameterCheck} from \"./ParameterCheck\";\n\n/**\n * Private function to return the path to the REST endpoint.\n *\n * @export\n * @returns String of the OrganizationData Service\n */\nexport function oDataPath() {\n    return getClientUrl() + \"/XRMServices/2011/OrganizationData.svc/\";\n}\n\n/**\n * Private function return an Error object to the errorCallback\n *\n * @export\n * @param {XMLHttpRequest} req The XMLHttpRequest response that returned an error.\n */\nexport function errorHandler(req: XMLHttpRequest) {\n    throw new Error(\"Error : \" +\n    req.status + \": \" +\n    req.statusText + \": \" +\n    JSON.parse(req.responseText).error.message.value);\n}\n\n/**\n * Private function to convert matching string values to Date objects.\n *\n * @export\n * @param {string} key The key used to identify the object property\n * @param {string} value The string value representing a date\n * @returns {(string | Date)}\n */\nexport function dateReviver(key: string, value: string): string | Date {\n    let a: RegExpExecArray;\n    if (typeof value === \"string\") {\n        a = /Date\\(([-+]?\\d+)\\)/.exec(value);\n        if (a) {\n            return new Date(parseInt(value.replace(\"/Date(\", \"\").replace(\")/\", \"\"), 10));\n        }\n    }\n    return value;\n}\n\n/**\n * Get an instance of XMLHttpRequest for all browsers\n *\n * @export\n * @returns (description)\n */\nexport function getXhr(): XMLHttpRequest | ActiveXObject {\n    if (XMLHttpRequest) {\n        // Chrome, Firefox, IE7+, Opera, Safari\n        // ReSharper disable InconsistentNaming\n        return new XMLHttpRequest();\n        // ReSharper     restore InconsistentNaming\n    }\n    // IE6\n    try {\n        // The latest stable version. It has the best security, performance,\n        // reliability, and W3C conformance. Ships with Vista, and available\n        // with other OS's via downloads and updates.\n        return new ActiveXObject(\"MSXML2.XMLHTTP.6.0\");\n    } catch (e) {\n        try {\n            // The fallback.\n            return new ActiveXObject(\"MSXML2.XMLHTTP.3.0\");\n        } catch (e) {\n            alertMessage(\"This browser is not AJAX enabled.\");\n            return null;\n        }\n    }\n}\n\n/**\n * Perform request with settings\n *\n * @export\n * @param {*} settings Settings for the request\n */\nexport function performRequest(settings: any): void {\n    parameterCheck(settings, \"The value passed to the performRequest function settings parameter is null or undefined.\");\n    let request: XMLHttpRequest = <XMLHttpRequest>getXhr();\n    request.open(settings.type, settings.url, settings.async);\n    request.setRequestHeader(\"Accept\", \"application/json\");\n    if (settings.action != null) {\n        request.setRequestHeader(\"X-HTTP-Method\", settings.action);\n    }\n    request.setRequestHeader(\"Content-Type\", \"application/json; charset=utf-8\");\n\n    if (settings.async) {\n        request.onreadystatechange = () => {\n            if (request.readyState === 4 /*Complete*/) {\n                // Status 201 is for create, status 204/1223 for link and delete.\n                // There appears to be an issue where IE maps the 204 status to 1223\n                // when no content is returned.\n                if (request.status === 204 || request.status === 1223 || request.status === 201) {\n                    settings.success(request);\n                } else {\n                    // Failure\n                    if (settings.error) {\n                        settings.error(errorHandler(request));\n                    } else {\n                        errorHandler(request);\n                    }\n                }\n            }\n        };\n\n        if (typeof settings.data === \"undefined\") {\n            request.send();\n        } else {\n            request.send(settings.data);\n        }\n    } else {\n        if (typeof settings.data === \"undefined\") {\n            request.send();\n        } else {\n            request.send(settings.data);\n        }\n\n        if (request.status === 204 || request.status === 1223 || request.status === 201) {\n            settings.success(request);\n        } else {\n            // Failure\n            if (settings.error) {\n                settings.error(errorHandler(request));\n            } else {\n                errorHandler(request);\n            }\n        }\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/HelperRest.ts\n **/","/**\n * Prompt an alert message\n *\n * @param {string} message Alert message text\n */\nexport function alertMessage(message: string): void{\n    (Xrm.Utility !== undefined && Xrm.Utility.alertDialog !== undefined) ? (<any>Xrm).Utility.alertDialog(message) : alert(message);\n}\n\n/**\n * Check if two guids are equal\n *\n * @export\n * @param {string} guid1 A string represents a guid\n * @param {string} guid2 A string represents a guid\n * @returns {boolean}\n */\nexport function guidsAreEqual(guid1: string, guid2: string): boolean{\n    let isEqual: boolean;\n    if (guid1 === null || guid2 === null || guid1 === undefined || guid2 === undefined) {\n        isEqual = false;\n    } else {\n        isEqual = guid1.replace(/[{}]/g, \"\").toLowerCase() === guid2.replace(/[{}]/g, \"\").toLowerCase();\n    }\n\n    return isEqual;\n}\n\n/**\n * Private function to the context object.\n *\n * @export\n * @returns {Xrm.Context}\n */\nexport function context(): Xrm.Context {\n    let oContext: Xrm.Context;\n    if (typeof window.GetGlobalContext !== \"undefined\") {\n        oContext = window.GetGlobalContext();\n    } else if (typeof GetGlobalContext !== \"undefined\") {\n        oContext = GetGlobalContext();\n    } else {\n        if (typeof Xrm !== \"undefined\") {\n            oContext = Xrm.Page.context;\n        } else if (typeof window.parent.Xrm !== \"undefined\") {\n            oContext = window.parent.Xrm.Page.context;\n        } else {\n            throw new Error(\"Context is not available.\");\n        }\n    }\n    return oContext;\n}\n\n /**\n  * Private function to return the server URL from the context\n  *\n  * @export\n  * @returns {string} Url of the organization\n  */\n export function getClientUrl() {\n    let serverUrl = typeof context().getClientUrl !== \"undefined\" ? context().getClientUrl() : (<any>context()).getServerUrl();\n    if (serverUrl.match(/\\/$/)) {\n        serverUrl = serverUrl.substring(0, serverUrl.length - 1);\n    }\n    return serverUrl;\n}\n\nexport function htmlEncode(s: string): string {\n    let buffer: string = \"\";\n    let hEncode: string = \"\";\n    if (s === null || s === \"\" || s === undefined) return s;\n    for (let count = 0, cnt = 0, slength = s.length; cnt < slength; cnt++) {\n        let c = s.charCodeAt(cnt);\n        if (c > 96 && c < 123 || c > 64 && c < 91 || c === 32 || c > 47 && c < 58 || c === 46 || c === 44 || c === 45 || c === 95){\n            buffer += String.fromCharCode(c);\n        } else {\n            buffer += \"&#\" + c + \";\";\n        }\n        if (++count === 500) {\n            hEncode += buffer; buffer = \"\"; count = 0;\n        }\n    }\n    if (buffer.length) hEncode += buffer;\n    return hEncode;\n }\n\nexport function innerSurrogateAmpersandWorkaround(s: string): string {\n    let buffer: string = \"\";\n    let c0: number;\n    let cnt: number = 0;\n    let slength: number = s.length;\n    for ( ; cnt < slength; cnt++) {\n        c0 = s.charCodeAt(cnt);\n        if (c0 >= 55296 && c0 <= 57343) {\n            if (cnt + 1 < s.length) {\n                let c1 = s.charCodeAt(cnt + 1);\n                if (c1 >= 56320 && c1 <= 57343) {\n                    buffer += \"CRMEntityReferenceOpen\" + ((c0 - 55296) * 1024 + (c1 & 1023) + 65536).toString(16) + \"CRMEntityReferenceClose\"; cnt++;\n                } else {\n                    buffer += String.fromCharCode(c0);\n                }\n            } else {\n                buffer += String.fromCharCode(c0);\n            }\n        } else {\n            buffer += String.fromCharCode(c0);\n        }\n    }\n    s = buffer;\n    buffer = \"\";\n    for (cnt = 0, slength = s.length; cnt < slength; cnt++) {\n        c0 = s.charCodeAt(cnt);\n        if (c0 >= 55296 && c0 <= 57343){\n            buffer += String.fromCharCode(65533);\n        } else {\n            buffer += String.fromCharCode(c0);\n        }\n    }\n    s = buffer;\n    s = htmlEncode(s);\n    s = s.replace(/CRMEntityReferenceOpen/g, \"&#x\");\n    s = s.replace(/CRMEntityReferenceClose/g, \";\");\n    return s;\n}\n\nexport function crmXmlEncode(s: string): string {\n    if (\"undefined\" === typeof s || \"unknown\" === typeof s || null === s){\n         return s;\n    } else if (typeof s !== \"string\") {\n         s = s.toString();\n        }\n    return innerSurrogateAmpersandWorkaround(s);\n}\n\nexport function crmXmlDecode(s: string): string {\n    if (typeof s !== \"string\") {\n        s = s.toString();\n    }\n    return s;\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/Helper.ts\n **/","/**\r\n * Private function used to check whether required parameters are null or undefined\r\n *\r\n * @export\r\n * @param parameter The parameter to check\r\n * @param message The error message text to include when the error is thrown\r\n */\r\nexport function parameterCheck(parameter: any, message: string): void | Error {\r\n    if ((typeof parameter === \"undefined\") || parameter === null) {\r\n        throw new Error(message);\r\n    }\r\n}\r\n\r\n/**\r\n * Private function used to check whether required parameters are null or undefined\r\n *\r\n * @export\r\n * @param {*} parameter The string parameter to check\r\n * @param {string} message The error message text to include when the error is thrown\r\n */\r\nexport function stringParameterCheck(parameter: any, message: string): void | Error {\r\n    if (typeof parameter !== \"string\") {\r\n        throw new Error(message);\r\n    }\r\n}\r\n\r\n/**\r\n * Private function used to check whether required callback parameters are functions\r\n *\r\n * @export\r\n * @param {*} callbackParameter The callback parameter to check\r\n * @param {string} message The error message text to include when the error is thrown.\r\n */\r\nexport function callbackParameterCheck(callbackParameter: any, message: string): void | Error {\r\n    if (typeof callbackParameter !== \"function\") {\r\n        throw new Error(message);\r\n    }\r\n}\r\n\r\n/**\r\n * Private function used to check whether required parameters are null or undefined\r\n *\r\n * @export\r\n * @param {*} parameter The boolean parameter to check\r\n * @param {string} message The error message text to include when the error is thrown\r\n */\r\nexport function booleanParameterCheck(parameter: any, message: string): void | Error {\r\n    if (typeof parameter !== \"boolean\") {\r\n        throw new Error(message);\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/ParameterCheck.ts\n **/","/// <reference path=\"../typings/main.d.ts\" />\r\nimport {alertMessage, htmlEncode, innerSurrogateAmpersandWorkaround, crmXmlDecode, crmXmlEncode, encodeValue} from \"./Helper\";\r\nimport {xrmEntityReference, businessEntity, doRequest, xmlParser, xmlToString, selectSingleNodeText, selectSingleNode, fetchMore} from \"./HelperSoap\";\r\n\r\n        // RetrieveMultiple: retrieveMultiple,\r\n        // QueryByAttribute: queryByAttribute,\r\n        // QueryAll: queryAll,\r\n        // SetState: setState,\r\n        // Assign: assign,\r\n        // RetrievePrincipalAccess: retrievePrincipalAccess,\r\n        // GrantAccess: grantAccess,\r\n        // ModifyAccess: modifyAccess,\r\n        // RevokeAccess: revokeAccess,\r\n        // GetCurrentUserId: getCurrentUserId,\r\n        // GetCurrentUserBusinessUnitId: getCurrentUserBusinessUnitId,\r\n        // GetCurrentUserRoles: getCurrentUserRoles,\r\n        // IsCurrentUserRole: isCurrentUserInRole,\r\n        // RetrieveAllEntitiesMetadata: retrieveAllEntitiesMetadata,\r\n        // RetrieveEntityMetadata: retrieveEntityMetadata,\r\n        // RetrieveAttributeMetadata: retrieveAttributeMetadata\r\nexport default class Soap{\r\n\r\n    /**\r\n     * Sends synchronous/asynchronous request to create a new record\r\n     *\r\n     * @param {Object} be A JavaScript object with properties corresponding to the Schema name of\r\n     * entity attributes that are valid for create operations.\r\n     * @param {Function} callback A Function used for asynchronous request. If not defined, it sends a synchronous request\r\n     * @returns {(void | any)} If sync -> results\r\n     */\r\n    static Create(be: businessEntity, callback?: Function): void | any {\r\n        let request = be.serialize();\r\n        let async = !!callback;\r\n        let mBody = `\r\n            <request i:type=\"a:CreateRequest\" xmlns:a=\"http://schemas.microsoft.com/xrm/2011/Contracts\">\r\n                <a:Parameters xmlns:b=\"http://schemas.datacontract.org/2004/07/System.Collections.Generic\">\r\n                <a:KeyValuePairOfstringanyType>\r\n                    <b:key>Target</b:key>\r\n                    ${request}\r\n                </a:KeyValuePairOfstringanyType>\r\n                </a:Parameters>\r\n                <a:RequestId i:nil=\"true\" />\r\n                <a:RequestName>Create</a:RequestName>\r\n            </request>\r\n        `;\r\n\r\n        return doRequest(mBody, \"Execute\", async, (resultXml: string) => {\r\n            let responseText = selectSingleNodeText(resultXml, \"//b:value\");\r\n            let result = crmXmlDecode(responseText);\r\n\r\n            if (!async) {\r\n                return result;\r\n            } else {\r\n                callback(result);\r\n            }\r\n            // ReSharper disable NotAllPathsReturnValue\r\n        });\r\n        // ReSharper restore NotAllPathsReturnValue\r\n    }\r\n\r\n    /**\r\n     * Sends synchronous/asynchronous request to update an existing record\r\n     *\r\n     * @param {businessEntity} be A JavaScript object with properties corresponding to the Schema name of\r\n     * entity attributes that are valid for update operations\r\n     * @param {Function} callback A Function used for asynchronous request. If not defined, it sends a synchronous request\r\n     * @returns {(void | any)} If sync -> results\r\n     */\r\n    static Update(be: businessEntity, callback?: Function): void | any {\r\n        let request = be.serialize();\r\n        let async = !!callback;\r\n        let mBody = `\r\n            <request i:type=\"a:UpdateRequest\" xmlns:a=\"http://schemas.microsoft.com/xrm/2011/Contracts\">\r\n                <a:Parameters xmlns:b=\"http://schemas.datacontract.org/2004/07/System.Collections.Generic\">\r\n                    <a:KeyValuePairOfstringanyType>\r\n                        <b:key>Target</b:key>\r\n                        ${request}\r\n                    </a:KeyValuePairOfstringanyType>\r\n                </a:Parameters>\r\n                <a:RequestId i:nil=\"true\" />\r\n                <a:RequestName>Update</a:RequestName>\r\n            </request>\r\n        `;\r\n\r\n        return doRequest(mBody, \"Execute\", async, (resultXml: string) => {\r\n            let responseText = selectSingleNodeText(resultXml, \"//a:Results\");\r\n            let result = crmXmlDecode(responseText);\r\n\r\n            if (!async) {\r\n                return result;\r\n            } else {\r\n                callback(result);\r\n            }\r\n            // ReSharper disable NotAllPathsReturnValue\r\n        });\r\n        // ReSharper restore NotAllPathsReturnValue\r\n    }\r\n\r\n    /**\r\n     * Sends synchronous/asynchronous request to delete a record\r\n     *\r\n     * @param {string} entityName A JavaScript String corresponding to the Schema name of\r\n     * entity that is used for delete operations\r\n     * @param {string} id A JavaScript String corresponding to the GUID of\r\n     * entity that is used for delete operations\r\n     * @param {Function} [callback] A Function used for asynchronous request. If not defined, it sends a synchronous request\r\n     * @returns {(void | any)} If sync -> results\r\n     */\r\n    static Delete(entityName: string, id: string, callback?: Function): void | any {\r\n        let request =`\r\n            <request i:type=\"a:DeleteRequest\" xmlns:a=\"http://schemas.microsoft.com/xrm/2011/Contracts\">\r\n                <a:Parameters xmlns:b=\"http://schemas.datacontract.org/2004/07/System.Collections.Generic\">\r\n                    <a:KeyValuePairOfstringanyType>\r\n                        <b:key>Target</b:key>\r\n                        <b:value i:type=\"a:EntityReference\">\r\n                            <a:Id>\"\r\n                                ${id}\r\n                            </a:Id>\r\n                            <a:LogicalName>\r\n                                ${entityName}\r\n                            </a:LogicalName>\r\n                            <a:Name i:nil=\"true\" />\r\n                        </b:value>\r\n                    </a:KeyValuePairOfstringanyType>\r\n                </a:Parameters>\r\n                <a:RequestId i:nil=\"true\" />\r\n                <a:RequestName>Delete</a:RequestName>\r\n            </request>\r\n        `;\r\n        let async = !!callback;\r\n\r\n        return doRequest(request, \"Execute\", async, (resultXml: string) {\r\n            let responseText = selectSingleNodeText(resultXml, \"//a:Results\");\r\n            let result = crmXmlDecode(responseText);\r\n\r\n            if (!async) {\r\n                return result;\r\n            } else {\r\n                callback(result);\r\n            }\r\n            // ReSharper disable NotAllPathsReturnValue\r\n        });\r\n        // ReSharper restore NotAllPathsReturnValue\r\n    }\r\n\r\n    /**\r\n     * Sends synchronous/asynchronous request to execute a soap request\r\n     *\r\n     * @param {string} request A JavaScript string corresponding to the soap request\r\n     * that are valid for execute operations\r\n     * @param {Function} [callback] A Function used for asynchronous request. If not defined, it sends a synchronous request\r\n     * @returns {(void | any)} If sync -> results\r\n     */\r\n    static Execute(request: string, callback?: Function): void | any {\r\n        var async = !!callback;\r\n\r\n        return doRequest(request, \"Execute\", async, (resultXml: string) {\r\n            if (!async){\r\n                return resultXml;\r\n            } else{\r\n                callback(resultXml);\r\n            }\r\n            // ReSharper disable NotAllPathsReturnValue\r\n        });\r\n        // ReSharper restore NotAllPathsReturnValue\r\n    }\r\n\r\n    /**\r\n     * Sends synchronous/asynchronous request to do a fetch request)\r\n     *\r\n     * @param {string} fetchCore A JavaScript String containing serialized XML using the FetchXML schema.\r\n     * For efficiency, start with the \"entity\" node\r\n     * @param {boolean} fetchAll Switch to enable paging\r\n     * @param {Function} callback A Function used for asynchronous request. If not defined, it sends a synchronous request\r\n     * @returns {(void | any)} If sync -> results\r\n     */\r\n    static Fetch (fetchCore: string, fetchAll: boolean, callback: Function): void | any {\r\n        let fetchXml = fetchCore;\r\n\r\n        if (fetchCore.slice(0, 7) === \"<entity\") {\r\n            fetchXml =`\r\n                <fetch mapping=\"logical\">\r\n                    ${fetchCore.replace(/\\\"/g, \"'\")}\r\n                </fetch>\r\n            `;\r\n        } else {\r\n            let isAggregate = (fetchCore.indexOf(\"aggregate=\") !== -1);\r\n            let isLimitedReturn = (fetchCore.indexOf(\"page='1'\") !== -1 && fetchCore.indexOf(\"count='\") !== -1);\r\n\r\n            let distinctPos = fetchCore.indexOf(\"distinct=\");\r\n            let isDistinct = (distinctPos !== -1);\r\n            let valQuotes = fetchCore.substring(distinctPos + 9, distinctPos + 10);\r\n            let distinctValue = isDistinct\r\n                ? fetchCore.substring(fetchCore.indexOf(\"distinct=\") + 10, fetchCore.indexOf(valQuotes, fetchCore.indexOf(\"distinct=\") + 10))\r\n                : \"false\";\r\n            let xmlDoc = xmlParser(fetchCore);\r\n            let fetchEntity = selectSingleNode(xmlDoc, \"//entity\");\r\n            if (fetchEntity === null) {\r\n                throw new Error(\"XrmServiceToolkit.Fetch: No 'entity' node in the provided FetchXML.\");\r\n            }\r\n            let fetchCoreDom = fetchEntity;\r\n            try {\r\n                fetchCore = xmlToString(fetchCoreDom).replace(/\\\"/g, \"'\");\r\n            } catch (error) {\r\n                if (fetchCoreDom !== undefined && fetchCoreDom.xml) {\r\n                    fetchCore = fetchCoreDom.xml.replace(/\\\"/g, \"'\");\r\n                } else {\r\n                    throw new Error(\"XrmServiceToolkit.Fetch: This client does not provide the necessary XML features to continue.\");\r\n                }\r\n            }\r\n\r\n            if (!isAggregate && !isLimitedReturn) {\r\n                fetchXml = `\r\n                    <fetch mapping=\"logical\" distinct=\"${(isDistinct ? distinctValue : \"false\")}\"'\" >\r\n                        ${fetchCore}\r\n                    </fetch>\r\n                `;\r\n            }\r\n        }\r\n\r\n        let request = `\r\n            <request i:type=\"a:RetrieveMultipleRequest\" xmlns:a=\"http://schemas.microsoft.com/xrm/2011/Contracts\">\r\n                <a:Parameters xmlns:b=\"http://schemas.datacontract.org/2004/07/System.Collections.Generic\">\r\n                    <a:KeyValuePairOfstringanyType>\r\n                        <b:key>Query</b:key>\r\n                        <b:value i:type=\"a:FetchExpression\">\r\n                            <a:Query>${crmXmlEncode(fetchXml)}</a:Query>\r\n                        </b:value>\r\n                    </a:KeyValuePairOfstringanyType>\r\n                </a:Parameters>\r\n                <a:RequestId i:nil=\"true\"/>\r\n                <a:RequestName>RetrieveMultiple</a:RequestName>\r\n            </request>\r\n        `;\r\n\r\n        let async = !!callback;\r\n\r\n        return doRequest(request, \"Execute\", async, (resultXml: string) => {\r\n            let fetchResult: Node = selectSingleNode(resultXml, \"//a:Entities\");\r\n            let moreRecords: boolean = (selectSingleNodeText(resultXml, \"//a:MoreRecords\") === \"true\");\r\n\r\n            let fetchResults: Array<any> = [];\r\n            if (fetchResult != null) {\r\n                for (let ii: number = 0, olength = fetchResult.childNodes.length; ii < olength; ii++) {\r\n                    let entity: businessEntity = new businessEntity();\r\n\r\n                    entity.deserialize(fetchResult.childNodes[ii]);\r\n                    fetchResults.push(entity);\r\n                }\r\n\r\n                if (fetchAll && moreRecords) {\r\n                    let pageCookie = selectSingleNodeText(resultXml, \"//a:PagingCookie\").replace(/\\\"/g, '\\'').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/'/g, '&quot;');\r\n\r\n                    fetchMore(fetchCore, 2, pageCookie, fetchResults);\r\n                }\r\n\r\n                if (!async){\r\n                    return fetchResults;\r\n                } else{\r\n                    callback(fetchResults);\r\n                }\r\n            }\r\n            // ReSharper disable once NotAllPathsReturnValue\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Sends synchronous/asynchronous request to retrieve a record\r\n     *\r\n     * @param {string} entityName A JavaScript String corresponding to the Schema name of\r\n     * entity that is used for retrieve operations\r\n     * @param {string} id A JavaScript String corresponding to the GUID of\r\n     * entity that is used for retrieve operations\r\n     * @param {Array} columnSet  A JavaScript Array corresponding to the attributes of\r\n     * entity that is used for retrieve operations\r\n     * @param {Function} callback A Function used for asynchronous request. If not defined, it sends a synchronous request\r\n     * @returns {(void | any)} If sync -> results\r\n     */\r\n    static Retrieve(entityName: string, id: string, columnSet: Array<any>, callback: Function): void | any {\r\n        let attributes = \"\";\r\n        // ReSharper disable AssignedValueIsNeverUsed\r\n        let query = \"\";\r\n        // ReSharper restore AssignedValueIsNeverUsed\r\n        if (columnSet != null) {\r\n            for (let i = 0, ilength = columnSet.length; i < ilength; i++) {\r\n                attributes += \"<c:string>\" + columnSet[i] + \"</c:string>\";\r\n            }\r\n            query = \"<a:AllColumns>false</a:AllColumns>\" +\r\n                    \"<a:Columns xmlns:c='http://schemas.microsoft.com/2003/10/Serialization/Arrays'>\" +\r\n                        attributes +\r\n                    \"</a:Columns>\";\r\n        }\r\n        else {\r\n            query = \"<a:AllColumns>true</a:AllColumns><a:Columns xmlns:b='http://schemas.microsoft.com/2003/10/Serialization/Arrays' />\";\r\n        }\r\n\r\n        let msgBody = `\r\n            <request i:type=\"a:RetrieveRequest\" xmlns:a=\"http://schemas.microsoft.com/xrm/2011/Contracts\">\r\n                <a:Parameters xmlns:b=\"http://schemas.datacontract.org/2004/07/System.Collections.Generic\">\r\n                    <a:KeyValuePairOfstringanyType>\r\n                        <b:key>Target</b:key>\r\n                        <b:value i:type=\"a:EntityReference\">\r\n                            <a:Id>${encodeValue(id)}</a:Id>\r\n                            <a:LogicalName>${entityName}</a:LogicalName>\r\n                            <a:Name i:nil=\"true\" />\r\n                        </b:value>\r\n                    </a:KeyValuePairOfstringanyType>\r\n                    <a:KeyValuePairOfstringanyType>\r\n                        <b:key>ColumnSet</b:key>\r\n                        <b:value i:type=\"a:ColumnSet\">\r\n                            ${query}\r\n                        </b:value>\r\n                    </a:KeyValuePairOfstringanyType>\r\n                </a:Parameters>\r\n                <a:RequestId i:nil=\"true\" />\r\n                <a:RequestName>Retrieve</a:RequestName>\r\n            </request>\r\n        `;\r\n\r\n        let async = !!callback;\r\n\r\n        return doRequest(msgBody, \"Execute\", !!callback, (resultXml: string) => {\r\n            let retrieveResult: Node = selectSingleNode(resultXml, \"//b:value\");\r\n            let entity: businessEntity = new businessEntity();\r\n            entity.deserialize(retrieveResult);\r\n\r\n            if (!async){\r\n                return entity;\r\n            } else {\r\n                callback(entity);\r\n            }\r\n            // ReSharper disable NotAllPathsReturnValue\r\n        });\r\n        // ReSharper restore NotAllPathsReturnValue\r\n    }\r\n\r\n    /**\r\n     * Sends synchronous/asynchronous request to do a retrieveMultiple request\r\n     *\r\n     * @param {string} query A JavaScript String with properties corresponding to the retrievemultiple request\r\n     * that are valid for retrievemultiple operations\r\n     * @param {Function} callback A Function used for asynchronous request. If not defined, it sends a synchronous request\r\n     * @returns {(void | any)} If sync -> results\r\n     */\r\n    static RetrieveMultiple(query: string, callback: Function): void | any {\r\n        var request = `\r\n            <request i:type=\"a:RetrieveMultipleRequest\" xmlns:a=\"http://schemas.microsoft.com/xrm/2011/Contracts\">\r\n                <a:Parameters xmlns:b=\"http://schemas.datacontract.org/2004/07/System.Collections.Generic\">\r\n                    <a:KeyValuePairOfstringanyType>\r\n                        <b:key>Query</b:key>\r\n                        <b:value i:type=\"a:QueryExpression\">\r\n                            ${query}\r\n                        </b:value>\r\n                    </a:KeyValuePairOfstringanyType>\r\n                </a:Parameters>\r\n                <a:RequestId i:nil=\"true\"/>\r\n                <a:RequestName>RetrieveMultiple</a:RequestName>\r\n            </request>\r\n        `;\r\n\r\n        let async = !!callback;\r\n\r\n        return doRequest(request, \"Execute\", async, (resultXml: string) => {\r\n            let resultNodes: Node = selectSingleNode(resultXml, \"//a:Entities\");\r\n\r\n            let retriveMultipleResults: Array<businessEntity> = [];\r\n\r\n            for (let i = 0, ilength = resultNodes.childNodes.length; i < ilength; i++) {\r\n                let entity = new businessEntity();\r\n\r\n                entity.deserialize(resultNodes.childNodes[i]);\r\n                retriveMultipleResults[i] = entity;\r\n            }\r\n\r\n            if (!async){\r\n                return retriveMultipleResults;\r\n            } else{\r\n                callback(retriveMultipleResults);\r\n            }\r\n            // ReSharper disable NotAllPathsReturnValue\r\n        });\r\n        // ReSharper restore NotAllPathsReturnValue\r\n    }\r\n\r\n    let joinArray = function (prefix, array, suffix) {\r\n        let output = [];\r\n        for (let i = 0, ilength = array.length; i < ilength; i++) {\r\n            if (array[i] !== \"\" && array[i] != undefined) {\r\n                output.push(prefix, array[i], suffix);\r\n            }\r\n        }\r\n        return output.join(\"\");\r\n    };\r\n\r\n    var joinConditionPair = function (attributes, values) {\r\n        var output = [];\r\n        for (var i = 0, ilength = attributes.length; i < ilength; i++) {\r\n            if (attributes[i] !== \"\") {\r\n                var value1 = values[i];\r\n                if (typeof value1 == typeof []) {\r\n                    output.push(\"<condition attribute='\", attributes[i], \"' operator='in' >\");\r\n\r\n                    for (var valueIndex in value1) {\r\n                        if (value1.hasOwnProperty(valueIndex)) {\r\n                            var value = encodeValue(value1[valueIndex]);\r\n                            output.push(\"<value>\" + value + \"</value>\");\r\n                        }\r\n                    }\r\n\r\n                    output.push(\"</condition>\");\r\n                }\r\n                else if (typeof value1 == typeof \"\") {\r\n                    output.push(\"<condition attribute='\", attributes[i], \"' operator='eq' value='\", encodeValue(value1), \"' />\");\r\n                }\r\n            }\r\n        }\r\n        return output.join(\"\");\r\n    };\r\n\r\n\r\n\r\n    var queryByAttribute = function (queryOptions, callback) {\r\n        ///<summary>\r\n        /// Sends synchronous/asynchronous request to do a queryByAttribute request.\r\n        ///</summary>\r\n        ///<param name=\"queryOptions\" type=\"Object\">\r\n        /// A JavaScript Object with properties corresponding to the queryByAttribute Criteria\r\n        /// that are valid for queryByAttribute operations.\r\n        /// queryOptions.entityName is a string represents the name of the entity\r\n        /// queryOptions.attributes is a array represents the attributes of the entity to query\r\n        /// queryOptions.values is a array represents the values of the attributes to query\r\n        /// queryOptions.columnSet is a array represents the attributes of the entity to return\r\n        /// queryOptions.orderBy is a array represents the order conditions of the results\r\n        /// </param>\r\n        ///<param name=\"callback\" type=\"Function\">\r\n        /// A Function used for asynchronous request. If not defined, it sends a synchronous request.\r\n        /// </param>\r\n        var entityName = queryOptions.entityName;\r\n        var attributes = queryOptions.attributes;\r\n        var values = queryOptions.values;\r\n        var columnSet = queryOptions.columnSet;\r\n        var orderBy = queryOptions.orderBy || '';\r\n\r\n        attributes = isArray(attributes) ? attributes : [attributes];\r\n        values = isArray(values) ? values : [values];\r\n        orderBy = (!!orderBy && isArray(orderBy)) ? orderBy : [orderBy];\r\n        columnSet = (!!columnSet && isArray(columnSet)) ? columnSet : [columnSet];\r\n\r\n        var xml =\r\n                [\r\n                    \"<entity name='\", entityName, \"'>\",\r\n                            joinArray(\"<attribute name='\", columnSet, \"' />\"),\r\n                            joinArray(\"<order attribute='\", orderBy, \"' />\"),\r\n                        \"<filter>\",\r\n                                joinConditionPair(attributes, values),\r\n                        \"</filter>\",\r\n                    \"</entity>\"\r\n                ].join(\"\");\r\n\r\n        return fetch(xml, false, callback);\r\n    };\r\n\r\n    var queryAll = function (queryOptions, callback) {\r\n        ///<summary>\r\n        /// Sends synchronous/asynchronous request to do a queryAll request. This is to return all records (>5k+).\r\n        /// Consider Performance impact when using this method.\r\n        ///</summary>\r\n        ///<param name=\"queryOptions\" type=\"Object\">\r\n        /// A JavaScript Object with properties corresponding to the queryByAttribute Criteria\r\n        /// that are valid for queryByAttribute operations.\r\n        /// queryOptions.entityName is a string represents the name of the entity\r\n        /// queryOptions.attributes is a array represents the attributes of the entity to query\r\n        /// queryOptions.values is a array represents the values of the attributes to query\r\n        /// queryOptions.columnSet is a array represents the attributes of the entity to return\r\n        /// queryOptions.orderBy is a array represents the order conditions of the results\r\n        /// </param>\r\n        ///<param name=\"callback\" type=\"Function\">\r\n        /// A Function used for asynchronous request. If not defined, it sends a synchronous request.\r\n        /// </param>\r\n        var entityName = queryOptions.entityName;\r\n        var attributes = queryOptions.attributes;\r\n        var values = queryOptions.values;\r\n        var columnSet = queryOptions.columnSet;\r\n        var orderBy = queryOptions.orderBy || '';\r\n\r\n        attributes = isArray(attributes) ? attributes : [attributes];\r\n        values = isArray(values) ? values : [values];\r\n        orderBy = (!!orderBy && isArray(orderBy)) ? orderBy : [orderBy];\r\n        columnSet = (!!columnSet && isArray(columnSet)) ? columnSet : [columnSet];\r\n\r\n        var fetchCore = [\r\n                    \"<entity name='\", entityName, \"'>\",\r\n                            joinArray(\"<attribute name='\", columnSet, \"' />\"),\r\n                            joinArray(\"<order attribute='\", orderBy, \"' />\"),\r\n                        \"<filter>\",\r\n                                joinConditionPair(attributes, values),\r\n                        \"</filter>\",\r\n                    \"</entity>\"\r\n        ].join(\"\");\r\n\r\n\r\n        var async = !!callback;\r\n\r\n        return fetch(fetchCore, true, async);\r\n    };\r\n\r\n    var setState = function (entityName, id, stateCode, statusCode, callback) {\r\n        ///<summary>\r\n        /// Sends synchronous/asynchronous request to setState of a record.\r\n        ///</summary>\r\n        ///<param name=\"entityName\" type=\"String\">\r\n        /// A JavaScript String corresponding to the Schema name of\r\n        /// entity that is used for setState operations.\r\n        /// </param>\r\n        ///<param name=\"id\" type=\"String\">\r\n        /// A JavaScript String corresponding to the GUID of\r\n        /// entity that is used for setState operations.\r\n        /// </param>\r\n        ///<param name=\"stateCode\" type=\"Int\">\r\n        /// A JavaScript Integer corresponding to the value of\r\n        /// entity state that is used for setState operations.\r\n        /// </param>\r\n        ///<param name=\"statusCode\" type=\"Int\">\r\n        /// A JavaScript Integer corresponding to the value of\r\n        /// entity status that is used for setState operations.\r\n        /// </param>\r\n        ///<param name=\"callback\" type=\"Function\">\r\n        /// A Function used for asynchronous request. If not defined, it sends a synchronous request.\r\n        /// </param>\r\n        var request = [\r\n            \"<request i:type='b:SetStateRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts' xmlns:b='http://schemas.microsoft.com/crm/2011/Contracts'>\",\r\n                \"<a:Parameters xmlns:c='http://schemas.datacontract.org/2004/07/System.Collections.Generic'>\",\r\n                    \"<a:KeyValuePairOfstringanyType>\",\r\n                        \"<c:key>EntityMoniker</c:key>\",\r\n                        \"<c:value i:type='a:EntityReference'>\",\r\n                            \"<a:Id>\", encodeValue(id), \"</a:Id>\",\r\n                            \"<a:LogicalName>\", entityName, \"</a:LogicalName>\",\r\n                            \"<a:Name i:nil='true' />\",\r\n                        \"</c:value>\",\r\n                        \"</a:KeyValuePairOfstringanyType>\",\r\n                        \"<a:KeyValuePairOfstringanyType>\",\r\n                        \"<c:key>State</c:key>\",\r\n                        \"<c:value i:type='a:OptionSetValue'>\",\r\n                            \"<a:Value>\", stateCode.toString(), \"</a:Value>\",\r\n                        \"</c:value>\",\r\n                        \"</a:KeyValuePairOfstringanyType>\",\r\n                        \"<a:KeyValuePairOfstringanyType>\",\r\n                        \"<c:key>Status</c:key>\",\r\n                        \"<c:value i:type='a:OptionSetValue'>\",\r\n                            \"<a:Value>\", statusCode.toString(), \"</a:Value>\",\r\n                        \"</c:value>\",\r\n                        \"</a:KeyValuePairOfstringanyType>\",\r\n                \"</a:Parameters>\",\r\n                \"<a:RequestId i:nil='true' />\",\r\n                \"<a:RequestName>SetState</a:RequestName>\",\r\n            \"</request>\"\r\n        ].join(\"\");\r\n\r\n        var async = !!callback;\r\n\r\n        return doRequest(request, \"Execute\", async, function (resultXml) {\r\n            var responseText = selectSingleNodeText(resultXml, \"//ser:ExecuteResult\");\r\n            var result = crmXmlDecode(responseText);\r\n            if (!async)\r\n                return result;\r\n            else\r\n                callback(result);\r\n            // ReSharper disable NotAllPathsReturnValue\r\n        });\r\n        // ReSharper restore NotAllPathsReturnValue\r\n    };\r\n\r\n    var associate = function (relationshipName, targetEntityName, targetId, relatedEntityName, relatedBusinessEntities, callback) {\r\n        ///<summary>\r\n        /// Sends synchronous/asynchronous request to associate records.\r\n        ///</summary>\r\n        ///<param name=\"relationshipName\" type=\"String\">\r\n        /// A JavaScript String corresponding to the relationship name\r\n        /// that is used for associate operations.\r\n        /// </param>\r\n        ///<param name=\"targetEntityName\" type=\"String\">\r\n        /// A JavaScript String corresponding to the schema name of the target entity\r\n        /// that is used for associate operations.\r\n        /// </param>\r\n        ///<param name=\"targetId\" type=\"String\">\r\n        /// A JavaScript String corresponding to the GUID of the target entity\r\n        /// that is used for associate operations.\r\n        /// </param>\r\n        ///<param name=\"relatedEntityName\" type=\"String\">\r\n        /// A JavaScript String corresponding to the schema name of the related entity\r\n        /// that is used for associate operations.\r\n        /// </param>\r\n        ///<param name=\"relationshipBusinessEntities\" type=\"Array\">\r\n        /// A JavaScript Array corresponding to the collection of the related entities as BusinessEntity\r\n        /// that is used for associate operations.\r\n        /// </param>\r\n        ///<param name=\"callback\" type=\"Function\">\r\n        /// A Function used for asynchronous request. If not defined, it sends a synchronous request.\r\n        /// </param>\r\n        var relatedEntities = relatedBusinessEntities;\r\n\r\n        relatedEntities = isArray(relatedEntities) ? relatedEntities : [relatedEntities];\r\n\r\n        var output = [];\r\n        for (var i = 0, ilength = relatedEntities.length; i < ilength; i++) {\r\n            if (relatedEntities[i].id !== \"\") {\r\n                output.push(\"<a:EntityReference>\",\r\n                                \"<a:Id>\", relatedEntities[i].id, \"</a:Id>\",\r\n                                \"<a:LogicalName>\", relatedEntityName, \"</a:LogicalName>\",\r\n                                \"<a:Name i:nil='true' />\",\r\n                            \"</a:EntityReference>\");\r\n            }\r\n        }\r\n\r\n        var relatedXml = output.join(\"\");\r\n\r\n        var request = [\r\n            \"<request i:type='a:AssociateRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts'>\",\r\n                \"<a:Parameters xmlns:b='http://schemas.datacontract.org/2004/07/System.Collections.Generic'>\",\r\n                    \"<a:KeyValuePairOfstringanyType>\",\r\n                        \"<b:key>Target</b:key>\",\r\n                        \"<b:value i:type='a:EntityReference'>\",\r\n                            \"<a:Id>\", encodeValue(targetId), \"</a:Id>\",\r\n                            \"<a:LogicalName>\", targetEntityName, \"</a:LogicalName>\",\r\n                            \"<a:Name i:nil='true' />\",\r\n                        \"</b:value>\",\r\n                    \"</a:KeyValuePairOfstringanyType>\",\r\n                    \"<a:KeyValuePairOfstringanyType>\",\r\n                        \"<b:key>Relationship</b:key>\",\r\n                        \"<b:value i:type='a:Relationship'>\",\r\n                            \"<a:PrimaryEntityRole>Referenced</a:PrimaryEntityRole>\",\r\n                            \"<a:SchemaName>\", relationshipName, \"</a:SchemaName>\",\r\n                        \"</b:value>\",\r\n                    \"</a:KeyValuePairOfstringanyType>\",\r\n                    \"<a:KeyValuePairOfstringanyType>\",\r\n                    \"<b:key>RelatedEntities</b:key>\",\r\n                    \"<b:value i:type='a:EntityReferenceCollection'>\",\r\n                        relatedXml,\r\n                    \"</b:value>\",\r\n                    \"</a:KeyValuePairOfstringanyType>\",\r\n                \"</a:Parameters>\",\r\n                \"<a:RequestId i:nil='true' />\",\r\n                \"<a:RequestName>Associate</a:RequestName>\",\r\n            \"</request>\"\r\n        ].join(\"\");\r\n\r\n        var async = !!callback;\r\n\r\n        return doRequest(request, \"Execute\", async, function (resultXml) {\r\n            var responseText = selectSingleNodeText(resultXml, \"//ser:ExecuteResult\");\r\n            var result = crmXmlDecode(responseText);\r\n            if (!async)\r\n                return result;\r\n            else\r\n                callback(result);\r\n            // ReSharper disable NotAllPathsReturnValue\r\n        });\r\n        // ReSharper restore NotAllPathsReturnValue\r\n    };\r\n\r\n    var disassociate = function (relationshipName, targetEntityName, targetId, relatedEntityName, relatedBusinessEntities, callback) {\r\n        ///<summary>\r\n        /// Sends synchronous/asynchronous request to disassociate records.\r\n        ///</summary>\r\n        ///<param name=\"relationshipName\" type=\"String\">\r\n        /// A JavaScript String corresponding to the relationship name\r\n        /// that is used for disassociate operations.\r\n        /// </param>\r\n        ///<param name=\"targetEntityName\" type=\"String\">\r\n        /// A JavaScript String corresponding to the schema name of the target entity\r\n        /// that is used for disassociate operations.\r\n        /// </param>\r\n        ///<param name=\"targetId\" type=\"String\">\r\n        /// A JavaScript String corresponding to the GUID of the target entity\r\n        /// that is used for disassociate operations.\r\n        /// </param>\r\n        ///<param name=\"relatedEntityName\" type=\"String\">\r\n        /// A JavaScript String corresponding to the schema name of the related entity\r\n        /// that is used for disassociate operations.\r\n        /// </param>\r\n        ///<param name=\"relationshipBusinessEntities\" type=\"Array\">\r\n        /// A JavaScript Array corresponding to the collection of the related entities as BusinessEntity\r\n        /// that is used for disassociate operations.\r\n        /// </param>\r\n        ///<param name=\"callback\" type=\"Function\">\r\n        /// A Function used for asynchronous request. If not defined, it sends a synchronous request.\r\n        /// </param>\r\n        var relatedEntities = relatedBusinessEntities;\r\n\r\n        relatedEntities = isArray(relatedEntities) ? relatedEntities : [relatedEntities];\r\n\r\n        var output = [];\r\n        for (var i = 0, ilength = relatedEntities.length; i < ilength; i++) {\r\n            if (relatedEntities[i].id !== \"\") {\r\n                output.push(\"<a:EntityReference>\",\r\n                                \"<a:Id>\", relatedEntities[i].id, \"</a:Id>\",\r\n                                \"<a:LogicalName>\", relatedEntityName, \"</a:LogicalName>\",\r\n                                \"<a:Name i:nil='true' />\",\r\n                            \"</a:EntityReference>\");\r\n            }\r\n        }\r\n\r\n        var relatedXml = output.join(\"\");\r\n\r\n        var request = [\r\n            \"<request i:type='a:DisassociateRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts'>\",\r\n                \"<a:Parameters xmlns:b='http://schemas.datacontract.org/2004/07/System.Collections.Generic'>\",\r\n                    \"<a:KeyValuePairOfstringanyType>\",\r\n                        \"<b:key>Target</b:key>\",\r\n                        \"<b:value i:type='a:EntityReference'>\",\r\n                            \"<a:Id>\", encodeValue(targetId), \"</a:Id>\",\r\n                            \"<a:LogicalName>\", targetEntityName, \"</a:LogicalName>\",\r\n                            \"<a:Name i:nil='true' />\",\r\n                        \"</b:value>\",\r\n                    \"</a:KeyValuePairOfstringanyType>\",\r\n                    \"<a:KeyValuePairOfstringanyType>\",\r\n                        \"<b:key>Relationship</b:key>\",\r\n                        \"<b:value i:type='a:Relationship'>\",\r\n                            \"<a:PrimaryEntityRole i:nil='true' />\",\r\n                            \"<a:SchemaName>\", relationshipName, \"</a:SchemaName>\",\r\n                        \"</b:value>\",\r\n                    \"</a:KeyValuePairOfstringanyType>\",\r\n                    \"<a:KeyValuePairOfstringanyType>\",\r\n                    \"<b:key>RelatedEntities</b:key>\",\r\n                    \"<b:value i:type='a:EntityReferenceCollection'>\",\r\n                        relatedXml,\r\n                    \"</b:value>\",\r\n                    \"</a:KeyValuePairOfstringanyType>\",\r\n                \"</a:Parameters>\",\r\n                \"<a:RequestId i:nil='true' />\",\r\n                \"<a:RequestName>Disassociate</a:RequestName>\",\r\n            \"</request>\"\r\n        ].join(\"\");\r\n\r\n        var async = !!callback;\r\n\r\n        return doRequest(request, \"Execute\", async, function (resultXml) {\r\n            var responseText = selectSingleNodeText(resultXml, \"//ser:ExecuteResult\");\r\n            var result = crmXmlDecode(responseText);\r\n            if (!async)\r\n                return result;\r\n            else\r\n                callback(result);\r\n            // ReSharper disable NotAllPathsReturnValue\r\n        });\r\n        // ReSharper restore NotAllPathsReturnValue\r\n    };\r\n\r\n    var getCurrentUserId = function () {\r\n        ///<summary>\r\n        /// Sends synchronous request to retrieve the GUID of the current user.\r\n        ///</summary>\r\n        var request = [\r\n                \"<request i:type='b:WhoAmIRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts' xmlns:b='http://schemas.microsoft.com/crm/2011/Contracts'>\",\r\n                \"<a:Parameters xmlns:c='http://schemas.datacontract.org/2004/07/System.Collections.Generic' />\",\r\n                \"<a:RequestId i:nil='true' />\",\r\n                \"<a:RequestName>WhoAmI</a:RequestName>\",\r\n                \"</request>\"\r\n        ].join(\"\");\r\n        var xmlDoc = doRequest(request, \"Execute\");\r\n\r\n        return getNodeText(selectNodes(xmlDoc, \"//b:value\")[0]);\r\n\r\n    };\r\n\r\n    var getCurrentUserBusinessUnitId = function () {\r\n        ///<summary>\r\n        /// Sends synchronous request to retrieve the GUID of the current user's business unit.\r\n        ///</summary>\r\n        var request = [\"<request i:type='b:WhoAmIRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts' xmlns:b='http://schemas.microsoft.com/crm/2011/Contracts'>\",\r\n                        \"<a:Parameters xmlns:c='http://schemas.datacontract.org/2004/07/System.Collections.Generic' />\",\r\n                        \"<a:RequestId i:nil='true' />\",\r\n                        \"<a:RequestName>WhoAmI</a:RequestName>\",\r\n                        \"</request>\"].join(\"\");\r\n        var xmlDoc = doRequest(request, \"Execute\");\r\n\r\n        return getNodeText(selectNodes(xmlDoc, \"//b:value\")[1]);\r\n    };\r\n\r\n    var getCurrentUserRoles = function () {\r\n        ///<summary>\r\n        /// Sends synchronous request to retrieve the list of the current user's roles.\r\n        ///</summary>\r\n        var xml =\r\n                [\r\n                    \"<fetch version='1.0' output-format='xml-platform' mapping='logical' distinct='true'>\",\r\n                        \"<entity name='role'>\",\r\n                        \"<attribute name='name' />\",\r\n                        \"<attribute name='businessunitid' />\",\r\n                        \"<attribute name='roleid' />\",\r\n                        \"<order attribute='name' descending='false' />\" +\r\n                        \"<link-entity name='systemuserroles' from='roleid' to='roleid' visible='false' intersect='true'>\",\r\n                            \"<link-entity name='systemuser' from='systemuserid' to='systemuserid' alias='aa'>\",\r\n                            \"<filter type='and'>\",\r\n                                \"<condition attribute='systemuserid' operator='eq-userid' />\",\r\n                            \"</filter>\",\r\n                            \"</link-entity>\",\r\n                        \"</link-entity>\",\r\n                        \"</entity>\",\r\n                    \"</fetch>\"\r\n                ].join(\"\");\r\n\r\n        var fetchResult = fetch(xml);\r\n        var roles = [];\r\n\r\n        if (fetchResult !== null && typeof fetchResult != 'undefined') {\r\n            for (var i = 0, ilength = fetchResult.length; i < ilength; i++) {\r\n                roles[i] = fetchResult[i].attributes[\"name\"].value;\r\n            }\r\n        }\r\n\r\n        return roles;\r\n    };\r\n\r\n    var isCurrentUserInRole = function () {\r\n        ///<summary>\r\n        /// Sends synchronous request to check if the current user has certain roles\r\n        /// Passes name of role as arguments. For example, IsCurrentUserInRole('System Administrator')\r\n        /// Returns true or false.\r\n        ///</summary>\r\n        var roles = getCurrentUserRoles();\r\n        for (var i = 0, ilength = roles.length; i < ilength; i++) {\r\n            for (var j = 0, jlength = arguments.length; j < jlength; j++) {\r\n                if (roles[i] === arguments[j]) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    var assign = function (targetEntityName, targetId, assigneeEntityName, assigneeId, callback) {\r\n        ///<summary>\r\n        /// Sends synchronous/asynchronous request to assign an existing record to a user / a team.\r\n        ///</summary>\r\n        ///<param name=\"targetEntityName\" type=\"String\">\r\n        /// A JavaScript String corresponding to the schema name of the target entity\r\n        /// that is used for assign operations.\r\n        /// </param>\r\n        ///<param name=\"targetId\" type=\"String\">\r\n        /// A JavaScript String corresponding to the GUID of the target entity\r\n        /// that is used for assign operations.\r\n        /// </param>\r\n        ///<param name=\"assigneeEntityName\" type=\"String\">\r\n        /// A JavaScript String corresponding to the schema name of the assignee entity\r\n        /// that is used for assign operations.\r\n        /// </param>\r\n        ///<param name=\"assigneeId\" type=\"String\">\r\n        /// A JavaScript String corresponding to the GUID of the assignee entity\r\n        /// that is used for assign operations.\r\n        /// </param>\r\n        ///<param name=\"callback\" type=\"Function\">\r\n        /// A Function used for asynchronous request. If not defined, it sends a synchronous request.\r\n        /// </param>\r\n\r\n        var request = [\"<request i:type='b:AssignRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts' xmlns:b='http://schemas.microsoft.com/crm/2011/Contracts'>\",\r\n                        \"<a:Parameters xmlns:c='http://schemas.datacontract.org/2004/07/System.Collections.Generic'>\",\r\n                            \"<a:KeyValuePairOfstringanyType>\",\r\n                            \"<c:key>Target</c:key>\",\r\n                            \"<c:value i:type='a:EntityReference'>\",\r\n                                \"<a:Id>\", encodeValue(targetId), \"</a:Id>\",\r\n                                \"<a:LogicalName>\", targetEntityName, \"</a:LogicalName>\",\r\n                                \"<a:Name i:nil='true' />\",\r\n                            \"</c:value>\",\r\n                            \"</a:KeyValuePairOfstringanyType>\",\r\n                            \"<a:KeyValuePairOfstringanyType>\",\r\n                            \"<c:key>Assignee</c:key>\",\r\n                            \"<c:value i:type='a:EntityReference'>\",\r\n                                \"<a:Id>\", encodeValue(assigneeId), \"</a:Id>\",\r\n                                \"<a:LogicalName>\", assigneeEntityName, \"</a:LogicalName>\",\r\n                                \"<a:Name i:nil='true' />\",\r\n                            \"</c:value>\",\r\n                            \"</a:KeyValuePairOfstringanyType>\",\r\n                        \"</a:Parameters>\",\r\n                        \"<a:RequestId i:nil='true' />\",\r\n                        \"<a:RequestName>Assign</a:RequestName>\",\r\n                        \"</request>\"].join(\"\");\r\n        var async = !!callback;\r\n\r\n        return doRequest(request, \"Execute\", async, function (resultXml) {\r\n            var responseText = selectSingleNodeText(resultXml, \"//ser:ExecuteResult\");\r\n            var result = crmXmlDecode(responseText);\r\n            if (!async)\r\n                return result;\r\n            else\r\n                callback(result);\r\n            // ReSharper disable NotAllPathsReturnValue\r\n        });\r\n        // ReSharper restore NotAllPathsReturnValue\r\n    };\r\n\r\n    var grantAccess = function (accessOptions, callback) {\r\n        ///<summary>\r\n        /// Sends synchronous/asynchronous request to do a grantAccess request.\r\n        /// Levels of Access Options are: AppendAccess, AppendToAccess, AssignAccess, CreateAccess, DeleteAccess, None, ReadAccess, ShareAccess, and WriteAccess\r\n        ///</summary>\r\n        ///<param name=\"accessOptions\" type=\"Object\">\r\n        /// A JavaScript Object with properties corresponding to the grantAccess Criteria\r\n        /// that are valid for grantAccess operations.\r\n        /// accessOptions.targetEntityName is a string represents the name of the target entity\r\n        /// accessOptions.targetEntityId is a string represents the GUID of the target entity\r\n        /// accessOptions.principalEntityName is a string represents the name of the principal entity\r\n        /// accessOptions.principalEntityId is a string represents the GUID of the principal entity\r\n        /// accessOptions.accessRights is a array represents the access conditions of the results\r\n        /// </param>\r\n        ///<param name=\"callback\" type=\"Function\">\r\n        /// A Function used for asynchronous request. If not defined, it sends a synchronous request.\r\n        /// </param>\r\n\r\n        var targetEntityName = accessOptions.targetEntityName;\r\n        var targetEntityId = accessOptions.targetEntityId;\r\n        var principalEntityName = accessOptions.principalEntityName;\r\n        var principalEntityId = accessOptions.principalEntityId;\r\n        var accessRights = accessOptions.accessRights;\r\n\r\n        accessRights = isArray(accessRights) ? accessRights : [accessRights];\r\n\r\n        var accessRightString = \"\";\r\n        for (var i = 0, ilength = accessRights.length; i < ilength; i++) {\r\n            accessRightString += encodeValue(accessRights[i]) + \" \";\r\n        }\r\n\r\n        var request = [\"<request i:type='b:GrantAccessRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts' xmlns:b='http://schemas.microsoft.com/crm/2011/Contracts'>\",\r\n                        \"<a:Parameters xmlns:c='http://schemas.datacontract.org/2004/07/System.Collections.Generic'>\",\r\n                            \"<a:KeyValuePairOfstringanyType>\",\r\n                            \"<c:key>Target</c:key>\",\r\n                            \"<c:value i:type='a:EntityReference'>\",\r\n                                \"<a:Id>\", encodeValue(targetEntityId), \"</a:Id>\",\r\n                                \"<a:LogicalName>\", targetEntityName, \"</a:LogicalName>\",\r\n                                \"<a:Name i:nil='true' />\",\r\n                            \"</c:value>\",\r\n                            \"</a:KeyValuePairOfstringanyType>\",\r\n                            \"<a:KeyValuePairOfstringanyType>\",\r\n                            \"<c:key>PrincipalAccess</c:key>\",\r\n                            \"<c:value i:type='b:PrincipalAccess'>\",\r\n                                \"<b:AccessMask>\", accessRightString, \"</b:AccessMask>\",\r\n                                \"<b:Principal>\",\r\n                                \"<a:Id>\", encodeValue(principalEntityId), \"</a:Id>\",\r\n                                \"<a:LogicalName>\", principalEntityName, \"</a:LogicalName>\",\r\n                                \"<a:Name i:nil='true' />\",\r\n                                \"</b:Principal>\",\r\n                            \"</c:value>\",\r\n                            \"</a:KeyValuePairOfstringanyType>\",\r\n                        \"</a:Parameters>\",\r\n                        \"<a:RequestId i:nil='true' />\",\r\n                        \"<a:RequestName>GrantAccess</a:RequestName>\",\r\n                    \"</request>\"].join(\"\");\r\n        var async = !!callback;\r\n\r\n        return doRequest(request, \"Execute\", async, function (resultXml) {\r\n            var responseText = selectSingleNodeText(resultXml, \"//ser:ExecuteResult\");\r\n            var result = crmXmlDecode(responseText);\r\n            if (!async)\r\n                return result;\r\n            else\r\n                callback(result);\r\n            // ReSharper disable NotAllPathsReturnValue\r\n        });\r\n        // ReSharper restore NotAllPathsReturnValue\r\n    };\r\n\r\n    var modifyAccess = function (accessOptions, callback) {\r\n        ///<summary>\r\n        /// Sends synchronous/asynchronous request to do a modifyAccess request.\r\n        /// Levels of Access Options are: AppendAccess, AppendToAccess, AssignAccess, CreateAccess, DeleteAccess, None, ReadAccess, ShareAccess, and WriteAccess\r\n        ///</summary>\r\n        ///<param name=\"accessOptions\" type=\"Object\">\r\n        /// A JavaScript Object with properties corresponding to the modifyAccess Criteria\r\n        /// that are valid for modifyAccess operations.\r\n        /// accessOptions.targetEntityName is a string represents the name of the target entity\r\n        /// accessOptions.targetEntityId is a string represents the GUID of the target entity\r\n        /// accessOptions.principalEntityName is a string represents the name of the principal entity\r\n        /// accessOptions.principalEntityId is a string represents the GUID of the principal entity\r\n        /// accessOptions.accessRights is a array represents the access conditions of the results\r\n        /// </param>\r\n        ///<param name=\"callback\" type=\"Function\">\r\n        /// A Function used for asynchronous request. If not defined, it sends a synchronous request.\r\n        /// </param>\r\n\r\n        var targetEntityName = accessOptions.targetEntityName;\r\n        var targetEntityId = accessOptions.targetEntityId;\r\n        var principalEntityName = accessOptions.principalEntityName;\r\n        var principalEntityId = accessOptions.principalEntityId;\r\n        var accessRights = accessOptions.accessRights;\r\n\r\n        accessRights = isArray(accessRights) ? accessRights : [accessRights];\r\n\r\n        var accessRightString = \"\";\r\n        for (var i = 0, ilength = accessRights.length; i < ilength; i++) {\r\n            accessRightString += encodeValue(accessRights[i]) + \" \";\r\n        }\r\n\r\n        var request = [\"<request i:type='b:ModifyAccessRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts' xmlns:b='http://schemas.microsoft.com/crm/2011/Contracts'>\",\r\n                        \"<a:Parameters xmlns:c='http://schemas.datacontract.org/2004/07/System.Collections.Generic'>\",\r\n                            \"<a:KeyValuePairOfstringanyType>\",\r\n                            \"<c:key>Target</c:key>\",\r\n                            \"<c:value i:type='a:EntityReference'>\",\r\n                                \"<a:Id>\", encodeValue(targetEntityId), \"</a:Id>\",\r\n                                \"<a:LogicalName>\", targetEntityName, \"</a:LogicalName>\",\r\n                                \"<a:Name i:nil='true' />\",\r\n                            \"</c:value>\",\r\n                            \"</a:KeyValuePairOfstringanyType>\",\r\n                            \"<a:KeyValuePairOfstringanyType>\",\r\n                            \"<c:key>PrincipalAccess</c:key>\",\r\n                            \"<c:value i:type='b:PrincipalAccess'>\",\r\n                                \"<b:AccessMask>\", accessRightString, \"</b:AccessMask>\",\r\n                                \"<b:Principal>\",\r\n                                \"<a:Id>\", encodeValue(principalEntityId), \"</a:Id>\",\r\n                                \"<a:LogicalName>\", principalEntityName, \"</a:LogicalName>\",\r\n                                \"<a:Name i:nil='true' />\",\r\n                                \"</b:Principal>\",\r\n                            \"</c:value>\",\r\n                            \"</a:KeyValuePairOfstringanyType>\",\r\n                        \"</a:Parameters>\",\r\n                        \"<a:RequestId i:nil='true' />\",\r\n                        \"<a:RequestName>ModifyAccess</a:RequestName>\",\r\n                    \"</request>\"].join(\"\");\r\n        var async = !!callback;\r\n\r\n        return doRequest(request, \"Execute\", async, function (resultXml) {\r\n            var responseText = selectSingleNodeText(resultXml, \"//ser:ExecuteResult\");\r\n            var result = crmXmlDecode(responseText);\r\n            if (!async)\r\n                return result;\r\n            else\r\n                callback(result);\r\n            // ReSharper disable NotAllPathsReturnValue\r\n        });\r\n        // ReSharper restore NotAllPathsReturnValue\r\n    };\r\n\r\n    var revokeAccess = function (accessOptions, callback) {\r\n        ///<summary>\r\n        /// Sends synchronous/asynchronous request to do a revokeAccess request.\r\n        ///</summary>\r\n        ///<param name=\"accessOptions\" type=\"Object\">\r\n        /// A JavaScript Object with properties corresponding to the revokeAccess Criteria\r\n        /// that are valid for revokeAccess operations.\r\n        /// accessOptions.targetEntityName is a string represents the name of the target entity\r\n        /// accessOptions.targetEntityId is a string represents the GUID of the target entity\r\n        /// accessOptions.revokeeEntityName is a string represents the name of the revokee entity\r\n        /// accessOptions.revokeeEntityId is a string represents the GUID of the revokee entity\r\n        /// </param>\r\n        ///<param name=\"callback\" type=\"Function\">\r\n        /// A Function used for asynchronous request. If not defined, it sends a synchronous request.\r\n        /// </param>\r\n\r\n        var targetEntityName = accessOptions.targetEntityName;\r\n        var targetEntityId = accessOptions.targetEntityId;\r\n        var revokeeEntityName = accessOptions.revokeeEntityName;\r\n        var revokeeEntityId = accessOptions.revokeeEntityId;\r\n\r\n        var request = [\"<request i:type='b:RevokeAccessRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts' xmlns:b='http://schemas.microsoft.com/crm/2011/Contracts'>\",\r\n                        \"<a:Parameters xmlns:c='http://schemas.datacontract.org/2004/07/System.Collections.Generic'>\",\r\n                            \"<a:KeyValuePairOfstringanyType>\",\r\n                            \"<c:key>Target</c:key>\",\r\n                            \"<c:value i:type='a:EntityReference'>\",\r\n                                \"<a:Id>\", encodeValue(targetEntityId), \"</a:Id>\",\r\n                                \"<a:LogicalName>\", targetEntityName, \"</a:LogicalName>\",\r\n                                \"<a:Name i:nil='true' />\",\r\n                            \"</c:value>\",\r\n                            \"</a:KeyValuePairOfstringanyType>\",\r\n                            \"<a:KeyValuePairOfstringanyType>\",\r\n                            \"<c:key>Revokee</c:key>\",\r\n                            \"<c:value i:type='a:EntityReference'>\",\r\n                                \"<a:Id>\", encodeValue(revokeeEntityId), \"</a:Id>\",\r\n                                \"<a:LogicalName>\", revokeeEntityName, \"</a:LogicalName>\",\r\n                                \"<a:Name i:nil='true' />\",\r\n                            \"</c:value>\",\r\n                            \"</a:KeyValuePairOfstringanyType>\",\r\n                        \"</a:Parameters>\",\r\n                        \"<a:RequestId i:nil='true' />\",\r\n                        \"<a:RequestName>RevokeAccess</a:RequestName>\",\r\n                    \"</request>\"].join(\"\");\r\n        var async = !!callback;\r\n\r\n        return doRequest(request, \"Execute\", async, function (resultXml) {\r\n            var responseText = selectSingleNodeText(resultXml, \"//ser:ExecuteResult\");\r\n            var result = crmXmlDecode(responseText);\r\n            if (!async)\r\n                return result;\r\n            else\r\n                callback(result);\r\n            // ReSharper disable NotAllPathsReturnValue\r\n        });\r\n        // ReSharper restore NotAllPathsReturnValue\r\n    };\r\n\r\n    var retrievePrincipalAccess = function (accessOptions, callback) {\r\n        ///<summary>\r\n        /// Sends synchronous/asynchronous request to do a retrievePrincipalAccess request.\r\n        ///</summary>\r\n        ///<param name=\"accessOptions\" type=\"Object\">\r\n        /// A JavaScript Object with properties corresponding to the retrievePrincipalAccess Criteria\r\n        /// that are valid for retrievePrincipalAccess operations.\r\n        /// accessOptions.targetEntityName is a string represents the name of the target entity\r\n        /// accessOptions.targetEntityId is a string represents the GUID of the target entity\r\n        /// accessOptions.principalEntityName is a string represents the name of the principal entity\r\n        /// accessOptions.principalEntityId is a string represents the GUID of the principal entity\r\n        /// </param>\r\n        ///<param name=\"callback\" type=\"Function\">\r\n        /// A Function used for asynchronous request. If not defined, it sends a synchronous request.\r\n        /// </param>\r\n\r\n        var targetEntityName = accessOptions.targetEntityName;\r\n        var targetEntityId = accessOptions.targetEntityId;\r\n        var principalEntityName = accessOptions.principalEntityName;\r\n        var principalEntityId = accessOptions.principalEntityId;\r\n\r\n        var request = [\"<request i:type='b:RetrievePrincipalAccessRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts' xmlns:b='http://schemas.microsoft.com/crm/2011/Contracts'>\",\r\n                        \"<a:Parameters xmlns:c='http://schemas.datacontract.org/2004/07/System.Collections.Generic'>\",\r\n                            \"<a:KeyValuePairOfstringanyType>\",\r\n                            \"<c:key>Target</c:key>\",\r\n                            \"<c:value i:type='a:EntityReference'>\",\r\n                                \"<a:Id>\", encodeValue(targetEntityId), \"</a:Id>\",\r\n                                \"<a:LogicalName>\", targetEntityName, \"</a:LogicalName>\",\r\n                                \"<a:Name i:nil='true' />\",\r\n                            \"</c:value>\",\r\n                            \"</a:KeyValuePairOfstringanyType>\",\r\n                            \"<a:KeyValuePairOfstringanyType>\",\r\n                            \"<c:key>Principal</c:key>\",\r\n                            \"<c:value i:type='a:EntityReference'>\",\r\n                                \"<a:Id>\", encodeValue(principalEntityId), \"</a:Id>\",\r\n                                \"<a:LogicalName>\", principalEntityName, \"</a:LogicalName>\",\r\n                                \"<a:Name i:nil='true' />\",\r\n                            \"</c:value>\",\r\n                            \"</a:KeyValuePairOfstringanyType>\",\r\n                        \"</a:Parameters>\",\r\n                        \"<a:RequestId i:nil='true' />\",\r\n                        \"<a:RequestName>RetrievePrincipalAccess</a:RequestName>\",\r\n                    \"</request>\"].join(\"\");\r\n        var async = !!callback;\r\n\r\n        return doRequest(request, \"Execute\", async, function (resultXml) {\r\n            var result = selectSingleNodeText(resultXml, \"//b:value\");\r\n            if (!async)\r\n                return result;\r\n            else\r\n                callback(result);\r\n            // ReSharper disable NotAllPathsReturnValue\r\n        });\r\n        // ReSharper restore NotAllPathsReturnValue\r\n    };\r\n\r\n    // Added in 1.4.1 for metadata retrieval\r\n    // Inspired From Microsoft SDK code to retrieve Metadata using JavaScript\r\n    // Copyright (C) Microsoft Corporation.  All rights reserved.\r\n    var arrayElements = [\"Attributes\",\r\n                            \"ManyToManyRelationships\",\r\n                            \"ManyToOneRelationships\",\r\n                            \"OneToManyRelationships\",\r\n                            \"Privileges\",\r\n                            \"LocalizedLabels\",\r\n                            \"Options\",\r\n                            \"Targets\"];\r\n\r\n    var isMetadataArray = function (elementName) {\r\n        for (var i = 0, ilength = arrayElements.length; i < ilength; i++) {\r\n            if (elementName === arrayElements[i]) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    var getNodeName = function (node) {\r\n        if (typeof (node.baseName) != \"undefined\") {\r\n            return node.baseName;\r\n        }\r\n        else {\r\n            return node.localName;\r\n        }\r\n    };\r\n\r\n    var objectifyNode = function (node) {\r\n        //Check for null\r\n        if (node.attributes != null && node.attributes.length === 1) {\r\n            if (node.attributes.getNamedItem(\"i:nil\") != null && node.attributes.getNamedItem(\"i:nil\").nodeValue === \"true\") {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        //Check if it is a value\r\n        if ((node.firstChild != null) && (node.firstChild.nodeType === 3)) {\r\n            var nodeName = getNodeName(node);\r\n\r\n            switch (nodeName) {\r\n                //Integer Values\r\n                case \"ActivityTypeMask\":\r\n                case \"ObjectTypeCode\":\r\n                case \"ColumnNumber\":\r\n                case \"DefaultFormValue\":\r\n                case \"MaxValue\":\r\n                case \"MinValue\":\r\n                case \"MaxLength\":\r\n                case \"Order\":\r\n                case \"Precision\":\r\n                case \"PrecisionSource\":\r\n                case \"LanguageCode\":\r\n                    return parseInt(node.firstChild.nodeValue, 10);\r\n                    // Boolean values\r\n                case \"AutoRouteToOwnerQueue\":\r\n                case \"CanBeChanged\":\r\n                case \"CanTriggerWorkflow\":\r\n                case \"IsActivity\":\r\n                case \"IsActivityParty\":\r\n                case \"IsAvailableOffline\":\r\n                case \"IsChildEntity\":\r\n                case \"IsCustomEntity\":\r\n                case \"IsCustomOptionSet\":\r\n                case \"IsDocumentManagementEnabled\":\r\n                case \"IsEnabledForCharts\":\r\n                case \"IsGlobal\":\r\n                case \"IsImportable\":\r\n                case \"IsIntersect\":\r\n                case \"IsManaged\":\r\n                case \"IsReadingPaneEnabled\":\r\n                case \"IsValidForAdvancedFind\":\r\n                case \"CanBeSecuredForCreate\":\r\n                case \"CanBeSecuredForRead\":\r\n                case \"CanBeSecuredForUpdate\":\r\n                case \"IsCustomAttribute\":\r\n                case \"IsPrimaryId\":\r\n                case \"IsPrimaryName\":\r\n                case \"IsSecured\":\r\n                case \"IsValidForCreate\":\r\n                case \"IsValidForRead\":\r\n                case \"IsValidForUpdate\":\r\n                case \"IsCustomRelationship\":\r\n                case \"CanBeBasic\":\r\n                case \"CanBeDeep\":\r\n                case \"CanBeGlobal\":\r\n                case \"CanBeLocal\":\r\n                    return (node.firstChild.nodeValue === \"true\") ? true : false;\r\n                    //OptionMetadata.Value and BooleanManagedProperty.Value and AttributeRequiredLevelManagedProperty.Value\r\n                case \"Value\":\r\n                    //BooleanManagedProperty.Value\r\n                    if ((node.firstChild.nodeValue === \"true\") || (node.firstChild.nodeValue === \"false\")) {\r\n                        return (node.firstChild.nodeValue === \"true\") ? true : false;\r\n                    }\r\n                    //AttributeRequiredLevelManagedProperty.Value\r\n                    if (\r\n                            (node.firstChild.nodeValue === \"ApplicationRequired\") ||\r\n                            (node.firstChild.nodeValue === \"None\") ||\r\n                            (node.firstChild.nodeValue === \"Recommended\") ||\r\n                            (node.firstChild.nodeValue === \"SystemRequired\")\r\n                        ) {\r\n                        return node.firstChild.nodeValue;\r\n                    }\r\n                    else {\r\n                        //OptionMetadata.Value\r\n                        return parseInt(node.firstChild.nodeValue, 10);\r\n                    }\r\n                    // ReSharper disable JsUnreachableCode\r\n                    break;\r\n                    // ReSharper restore JsUnreachableCode\r\n                    //String values\r\n                default:\r\n                    return node.firstChild.nodeValue;\r\n            }\r\n\r\n        }\r\n\r\n        //Check if it is a known array\r\n        if (isMetadataArray(getNodeName(node))) {\r\n            var arrayValue = [];\r\n            for (var iii = 0, tempLength = node.childNodes.length; iii < tempLength; iii++) {\r\n                var objectTypeName;\r\n                if ((node.childNodes[iii].attributes != null) && (node.childNodes[iii].attributes.getNamedItem(\"i:type\") != null)) {\r\n                    objectTypeName = node.childNodes[iii].attributes.getNamedItem(\"i:type\").nodeValue.split(\":\")[1];\r\n                }\r\n                else {\r\n\r\n                    objectTypeName = getNodeName(node.childNodes[iii]);\r\n                }\r\n\r\n                var b = objectifyNode(node.childNodes[iii]);\r\n                b._type = objectTypeName;\r\n                arrayValue.push(b);\r\n\r\n            }\r\n\r\n            return arrayValue;\r\n        }\r\n\r\n        //Null entity description labels are returned as <label/> - not using i:nil = true;\r\n        if (node.childNodes.length === 0) {\r\n            return null;\r\n        }\r\n\r\n        //Otherwise return an object\r\n        var c = {};\r\n        if (node.attributes.getNamedItem(\"i:type\") != null) {\r\n            c._type = node.attributes.getNamedItem(\"i:type\").nodeValue.split(\":\")[1];\r\n        }\r\n        for (var i = 0, ilength = node.childNodes.length; i < ilength; i++) {\r\n            if (node.childNodes[i].nodeType === 3) {\r\n                c[getNodeName(node.childNodes[i])] = node.childNodes[i].nodeValue;\r\n            }\r\n            else {\r\n                c[getNodeName(node.childNodes[i])] = objectifyNode(node.childNodes[i]);\r\n            }\r\n\r\n        }\r\n        return c;\r\n    };\r\n\r\n    var retrieveAllEntitiesMetadata = function (entityFilters, retrieveIfPublished, callback) {\r\n        ///<summary>\r\n        /// Sends an synchronous/asynchronous RetrieveAllEntitieMetadata Request to retrieve all entities metadata in the system\r\n        ///</summary>\r\n        ///<returns>Entity Metadata Collection</returns>\r\n        ///<param name=\"entityFilters\" type=\"Array\">\r\n        /// The filter array available to filter which data is retrieved. Case Sensitive filters [Entity,Attributes,Privileges,Relationships]\r\n        /// Include only those elements of the entity you want to retrieve in the array. Retrieving all parts of all entities may take significant time.\r\n        ///</param>\r\n        ///<param name=\"retrieveIfPublished\" type=\"Boolean\">\r\n        /// Sets whether to retrieve the metadata that has not been published.\r\n        ///</param>\r\n        ///<param name=\"callBack\" type=\"Function\">\r\n        /// The function that will be passed through and be called by a successful response.\r\n        /// This function also used as an indicator if the function is synchronous/asynchronous\r\n        ///</param>\r\n\r\n        entityFilters = isArray(entityFilters) ? entityFilters : [entityFilters];\r\n        var entityFiltersString = \"\";\r\n        for (var iii = 0, templength = entityFilters.length; iii < templength; iii++) {\r\n            entityFiltersString += encodeValue(entityFilters[iii]) + \" \";\r\n        }\r\n\r\n        var request = [\r\n                \"<request i:type=\\\"a:RetrieveAllEntitiesRequest\\\" xmlns:a=\\\"http://schemas.microsoft.com/xrm/2011/Contracts\\\">\",\r\n                \"<a:Parameters xmlns:b=\\\"http://schemas.datacontract.org/2004/07/System.Collections.Generic\\\">\",\r\n                \"<a:KeyValuePairOfstringanyType>\",\r\n                \"<b:key>EntityFilters</b:key>\",\r\n                \"<b:value i:type=\\\"c:EntityFilters\\\" xmlns:c=\\\"http://schemas.microsoft.com/xrm/2011/Metadata\\\">\" + encodeValue(entityFiltersString) + \"</b:value>\",\r\n                \"</a:KeyValuePairOfstringanyType>\",\r\n                \"<a:KeyValuePairOfstringanyType>\",\r\n                \"<b:key>RetrieveAsIfPublished</b:key>\",\r\n                \"<b:value i:type=\\\"c:boolean\\\" xmlns:c=\\\"http://www.w3.org/2001/XMLSchema\\\">\" + encodeValue(retrieveIfPublished.toString()) + \"</b:value>\",\r\n                \"</a:KeyValuePairOfstringanyType>\",\r\n                \"</a:Parameters>\",\r\n                \"<a:RequestId i:nil=\\\"true\\\" />\",\r\n                \"<a:RequestName>RetrieveAllEntities</a:RequestName>\",\r\n            \"</request>\"].join(\"\");\r\n\r\n        var async = !!callback;\r\n        return doRequest(request, \"Execute\", async, function (resultXml) {\r\n            var response = selectNodes(resultXml, \"//c:EntityMetadata\");\r\n\r\n            var results = [];\r\n            for (var i = 0, ilength = response.length; i < ilength; i++) {\r\n                var a = objectifyNode(response[i]);\r\n                a._type = \"EntityMetadata\";\r\n                results.push(a);\r\n            }\r\n\r\n            if (!async)\r\n                return results;\r\n            else\r\n                callback(results);\r\n            // ReSharper disable NotAllPathsReturnValue\r\n        });\r\n        // ReSharper restore NotAllPathsReturnValue\r\n    };\r\n\r\n    var retrieveEntityMetadata = function (entityFilters, logicalName, retrieveIfPublished, callback) {\r\n        ///<summary>\r\n        /// Sends an synchronous/asynchronous RetreiveEntityMetadata Request to retrieve a particular entity metadata in the system\r\n        ///</summary>\r\n        ///<returns>Entity Metadata</returns>\r\n        ///<param name=\"entityFilters\" type=\"String\">\r\n        /// The filter string available to filter which data is retrieved. Case Sensitive filters [Entity,Attributes,Privileges,Relationships]\r\n        /// Include only those elements of the entity you want to retrieve in the array. Retrieving all parts of all entities may take significant time.\r\n        ///</param>\r\n        ///<param name=\"logicalName\" type=\"String\">\r\n        /// The string of the entity logical name\r\n        ///</param>\r\n        ///<param name=\"retrieveIfPublished\" type=\"Boolean\">\r\n        /// Sets whether to retrieve the metadata that has not been published.\r\n        ///</param>\r\n        ///<param name=\"callBack\" type=\"Function\">\r\n        /// The function that will be passed through and be called by a successful response.\r\n        /// This function also used as an indicator if the function is synchronous/asynchronous\r\n        ///</param>\r\n\r\n        entityFilters = isArray(entityFilters) ? entityFilters : [entityFilters];\r\n        var entityFiltersString = \"\";\r\n        for (var iii = 0, templength = entityFilters.length; iii < templength; iii++) {\r\n            entityFiltersString += encodeValue(entityFilters[iii]) + \" \";\r\n        }\r\n\r\n        var request = [\r\n            \"<request i:type=\\\"a:RetrieveEntityRequest\\\" xmlns:a=\\\"http://schemas.microsoft.com/xrm/2011/Contracts\\\">\",\r\n                \"<a:Parameters xmlns:b=\\\"http://schemas.datacontract.org/2004/07/System.Collections.Generic\\\">\",\r\n                    \"<a:KeyValuePairOfstringanyType>\",\r\n                        \"<b:key>EntityFilters</b:key>\",\r\n                        \"<b:value i:type=\\\"c:EntityFilters\\\" xmlns:c=\\\"http://schemas.microsoft.com/xrm/2011/Metadata\\\">\", encodeValue(entityFiltersString), \"</b:value>\",\r\n                    \"</a:KeyValuePairOfstringanyType>\",\r\n                    \"<a:KeyValuePairOfstringanyType>\",\r\n                        \"<b:key>MetadataId</b:key>\",\r\n                        \"<b:value i:type=\\\"c:guid\\\"  xmlns:c=\\\"http://schemas.microsoft.com/2003/10/Serialization/\\\">\", encodeValue(\"00000000-0000-0000-0000-000000000000\"), \"</b:value>\",\r\n                    \"</a:KeyValuePairOfstringanyType>\",\r\n                    \"<a:KeyValuePairOfstringanyType>\",\r\n                        \"<b:key>RetrieveAsIfPublished</b:key>\",\r\n                        \"<b:value i:type=\\\"c:boolean\\\" xmlns:c=\\\"http://www.w3.org/2001/XMLSchema\\\">\", encodeValue(retrieveIfPublished.toString()), \"</b:value>\",\r\n                    \"</a:KeyValuePairOfstringanyType>\",\r\n                    \"<a:KeyValuePairOfstringanyType>\",\r\n                        \"<b:key>LogicalName</b:key>\",\r\n                        \"<b:value i:type=\\\"c:string\\\" xmlns:c=\\\"http://www.w3.org/2001/XMLSchema\\\">\", encodeValue(logicalName), \"</b:value>\",\r\n                    \"</a:KeyValuePairOfstringanyType>\",\r\n                \"</a:Parameters>\",\r\n                \"<a:RequestId i:nil=\\\"true\\\" />\",\r\n                \"<a:RequestName>RetrieveEntity</a:RequestName>\",\r\n                \"</request>\"].join(\"\");\r\n\r\n        var async = !!callback;\r\n\r\n        return doRequest(request, \"Execute\", async, function (resultXml) {\r\n            var response = selectNodes(resultXml, \"//b:value\");\r\n\r\n            var results = [];\r\n            for (var i = 0, ilength = response.length; i < ilength; i++) {\r\n                var a = objectifyNode(response[i]);\r\n                a._type = \"EntityMetadata\";\r\n                results.push(a);\r\n            }\r\n\r\n            if (!async)\r\n                return results;\r\n            else\r\n                callback(results);\r\n            // ReSharper disable NotAllPathsReturnValue\r\n        });\r\n        // ReSharper restore NotAllPathsReturnValue\r\n    };\r\n\r\n    var retrieveAttributeMetadata = function (entityLogicalName, attributeLogicalName, retrieveIfPublished, callback) {\r\n        ///<summary>\r\n        /// Sends an synchronous/asynchronous RetrieveAttributeMetadata Request to retrieve a particular entity's attribute metadata in the system\r\n        ///</summary>\r\n        ///<returns>Entity Metadata</returns>\r\n        ///<param name=\"entityLogicalName\" type=\"String\">\r\n        /// The string of the entity logical name\r\n        ///</param>\r\n        ///<param name=\"attributeLogicalName\" type=\"String\">\r\n        /// The string of the entity's attribute logical name\r\n        ///</param>\r\n        ///<param name=\"retrieveIfPublished\" type=\"Boolean\">\r\n        /// Sets whether to retrieve the metadata that has not been published.\r\n        ///</param>\r\n        ///<param name=\"callBack\" type=\"Function\">\r\n        /// The function that will be passed through and be called by a successful response.\r\n        /// This function also used as an indicator if the function is synchronous/asynchronous\r\n        ///</param>\r\n\r\n        var request = [\r\n                \"<request i:type=\\\"a:RetrieveAttributeRequest\\\" xmlns:a=\\\"http://schemas.microsoft.com/xrm/2011/Contracts\\\">\",\r\n                \"<a:Parameters xmlns:b=\\\"http://schemas.datacontract.org/2004/07/System.Collections.Generic\\\">\",\r\n                \"<a:KeyValuePairOfstringanyType>\",\r\n                \"<b:key>EntityLogicalName</b:key>\",\r\n                \"<b:value i:type=\\\"c:string\\\" xmlns:c=\\\"http://www.w3.org/2001/XMLSchema\\\">\", encodeValue(entityLogicalName), \"</b:value>\",\r\n                \"</a:KeyValuePairOfstringanyType>\",\r\n                \"<a:KeyValuePairOfstringanyType>\",\r\n                \"<b:key>MetadataId</b:key>\",\r\n                \"<b:value i:type=\\\"ser:guid\\\"  xmlns:ser=\\\"http://schemas.microsoft.com/2003/10/Serialization/\\\">\", encodeValue(\"00000000-0000-0000-0000-000000000000\"), \"</b:value>\",\r\n                \"</a:KeyValuePairOfstringanyType>\",\r\n                \"<a:KeyValuePairOfstringanyType>\",\r\n                \"<b:key>RetrieveAsIfPublished</b:key>\",\r\n                \"<b:value i:type=\\\"c:boolean\\\" xmlns:c=\\\"http://www.w3.org/2001/XMLSchema\\\">\", encodeValue(retrieveIfPublished.toString()), \"</b:value>\",\r\n                \"</a:KeyValuePairOfstringanyType>\",\r\n                \"<a:KeyValuePairOfstringanyType>\",\r\n                \"<b:key>LogicalName</b:key>\",\r\n                \"<b:value i:type=\\\"c:string\\\"   xmlns:c=\\\"http://www.w3.org/2001/XMLSchema\\\">\", encodeValue(attributeLogicalName), \"</b:value>\",\r\n                \"</a:KeyValuePairOfstringanyType>\",\r\n                \"</a:Parameters>\",\r\n                \"<a:RequestId i:nil=\\\"true\\\" />\",\r\n                \"<a:RequestName>RetrieveAttribute</a:RequestName>\",\r\n                \"</request>\"].join(\"\");\r\n\r\n        var async = !!callback;\r\n\r\n        return doRequest(request, \"Execute\", async, function (resultXml) {\r\n            var response = selectNodes(resultXml, \"//b:value\");\r\n            var results = [];\r\n            for (var i = 0, ilength = response.length; i < ilength; i++) {\r\n                var a = objectifyNode(response[i]);\r\n                results.push(a);\r\n            }\r\n\r\n            if (!async)\r\n                return results;\r\n            else\r\n                callback(results);\r\n            // ReSharper disable NotAllPathsReturnValue\r\n        });\r\n        // ReSharper restore NotAllPathsReturnValue\r\n    };\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/Soap.ts\n **/","/// <reference path=\"../typings/main.d.ts\" />\r\n\r\nimport {crmXmlEncode, alertMessage, getClientUrl} from \"./Helper\";\r\n\r\nexport function padNumber(s: number, len?: number): string {\r\n    len = len || 2;\r\n\r\n    let str = s.toString();\r\n    while (str.length < len) {\r\n        str = \"0\" + str;\r\n    }\r\n    return str;\r\n}\r\n\r\nexport function encodeDate(dateTime: Date): string {\r\n    return dateTime.getFullYear() + \"-\" +\r\n        padNumber(dateTime.getMonth() + 1) + \"-\" +\r\n        padNumber(dateTime.getDate()) + \"T\" +\r\n        padNumber(dateTime.getHours()) + \":\" +\r\n        padNumber(dateTime.getMinutes()) + \":\" +\r\n        padNumber(dateTime.getSeconds());\r\n}\r\n\r\nexport function encodeValue(value: any): any {\r\n    // Handle GUIDs wrapped in braces\r\n    if (typeof value == typeof \"\" && value.slice(0, 1) === \"{\" && value.slice(-1) === \"}\") {\r\n        value = value.slice(1, -1);\r\n    }\r\n\r\n    // ReSharper disable QualifiedExpressionMaybeNull\r\n    return (typeof value === \"object\" && value.getTime)\r\n    // ReSharper restore QualifiedExpressionMaybeNull\r\n            ? encodeDate(value)\r\n            : crmXmlEncode(value);\r\n}\r\n\r\nexport class xrmValue {\r\n    type: string;\r\n    value: string;\r\n\r\n    constructor(sType?: string, sValue?: any){\r\n        this.type = sType;\r\n        this.value = sValue;\r\n    }\r\n}\r\n\r\nexport class xrmEntityReference {\r\n    id: string;\r\n    logicalName: string;\r\n    name: string;\r\n    type: string;\r\n\r\n    constructor(gId?: string, sLogicalName?: string, sName?: string){\r\n        this.id = gId;\r\n        this.logicalName = sLogicalName;\r\n        this.name = sName;\r\n        this.type = 'EntityReference';\r\n    }\r\n}\r\n\r\nexport class xrmEntityCollection {\r\n    value: Array<any>;\r\n    type: string;\r\n\r\n    constructor(items?: Array<any>) {\r\n        this.value = items;\r\n        this.type = 'EntityCollection';\r\n    }\r\n}\r\n\r\nexport class xrmOptionSetValue {\r\n    value: number;\r\n    formattedValue: string;\r\n    type: string;\r\n\r\n    constructor(iValue?: number, sFormattedValue?: string ){\r\n        this.value = iValue;\r\n        this.formattedValue = sFormattedValue;\r\n        this.type = \"OptionSetValue\";\r\n    }\r\n}\r\n\r\n/**\r\n * A object represents a business entity for CRM 2011\r\n *\r\n * @export\r\n * @param {string} logicalName A String represents the name of the entity.\r\n * For example, \"contact\" means the business entity will be a contact entity\r\n * @param {string} id A String represents the id of the entity. If not passed, it will be auto populated as a empty guid string\r\n */\r\nexport class businessEntity {\r\n    id: string;\r\n    logicalName:string;\r\n    attributes: any;\r\n\r\n    constructor(logicalName?: string, id?: string){\r\n        this.id = (!id) ? \"00000000-0000-0000-0000-000000000000\" : id;\r\n        this.logicalName = logicalName;\r\n        this.attributes = Object.create(null);\r\n    }\r\n\r\n    /**\r\n    * Serialize a CRM Business Entity object to XML string in order to be passed to CRM Web Services.\r\n    * @return {String} The serialized XML string of CRM entity.\r\n    */\r\n    serialize() {\r\n        let xml: Array<string> = [\"<b:value i:type='a:Entity'>\"];\r\n        xml.push('<a:Attributes xmlns:b=\"http://schemas.datacontract.org/2004/07/System.Collections.Generic\">');\r\n        let attributes = this.attributes;\r\n        for (let attributeName in attributes) {\r\n            if (attributes.hasOwnProperty(attributeName)) {\r\n                let attribute = attributes[attributeName];\r\n\r\n                xml.push(\"<a:KeyValuePairOfstringanyType>\");\r\n                xml.push(\"<b:key>\", attributeName, \"</b:key>\");\r\n\r\n                if (attribute === null || attribute.value === null) {\r\n                    xml.push(\"<b:value i:nil='true' />\");\r\n                } else {\r\n                    let sType = (!attribute.type)\r\n                        ? typeof attribute\r\n                        : crmXmlEncode(attribute.type);\r\n                    let value: any;\r\n                    let encodedValue: any;\r\n                    let id: string;\r\n                    let encodedId: string;\r\n                    let logicalName: string;\r\n                    let encodedLogicalName: string;\r\n                    switch (sType) {\r\n                    case \"OptionSetValue\":\r\n                        value = (attribute.hasOwnProperty(\"value\")) ? attribute[\"value\"] : attribute;\r\n                        encodedValue = encodeValue(value);\r\n                        xml.push(\"<b:value i:type='a:OptionSetValue'>\");\r\n                        xml.push(\"<a:Value>\", <string>encodedValue, \"</a:Value>\", \"</b:value>\");\r\n                        break;\r\n\r\n                    case \"EntityCollection\":\r\n                        xml.push(\"<b:value i:type='a:EntityCollection'>\");\r\n                        xml.push(\"<a:Entities>\");\r\n                        value = (attribute.hasOwnProperty(\"value\")) ? attribute[\"value\"] : attribute;\r\n                        let collections: any = isArray(value) ? value : [value];\r\n\r\n                        for (let i = 0, collectionLengh = collections.length; i < collectionLengh; i++) {\r\n                            let item = collections[i];\r\n                            id = (item.hasOwnProperty(\"id\")) ? item[\"id\"] : item;\r\n                            encodedId = encodeValue(id);\r\n                            logicalName = (item.hasOwnProperty(\"logicalName\")) ? item[\"logicalName\"] : item;\r\n                            encodedLogicalName = encodeValue(logicalName);\r\n                            xml.push(\"<a:Entity>\");\r\n                            xml.push(\"<a:Attributes>\");\r\n                            xml.push(\"<a:KeyValuePairOfstringanyType>\");\r\n                            xml.push(\"<b:key>partyid</b:key>\");\r\n                            xml.push(\"<b:value i:type='a:EntityReference'>\");\r\n                            xml.push(\"<a:Id>\", encodedId, \"</a:Id>\");\r\n                            if (Xrm.Utility.openQuickCreate !== undefined) {\r\n                                xml.push(\"<a:KeyAttributes xmlns:c='http://schemas.microsoft.com/xrm/7.1/Contracts' />\");\r\n                            }\r\n                            xml.push(\"<a:LogicalName>\", encodedLogicalName, \"</a:LogicalName>\");\r\n                            xml.push(\"<a:Name i:nil='true' />\");\r\n                            if (Xrm.Utility.openQuickCreate !== undefined) {\r\n                                xml.push(\"<a:RowVersion i:nil='true' />\");\r\n                            }\r\n                            xml.push(\"</b:value>\");\r\n                            xml.push(\"</a:KeyValuePairOfstringanyType>\");\r\n                            xml.push(\"</a:Attributes>\");\r\n                            xml.push(\"<a:EntityState i:nil='true' />\");\r\n                            xml.push(\"<a:FormattedValues />\");\r\n                            xml.push(\"<a:Id>00000000-0000-0000-0000-000000000000</a:Id>\");\r\n                            xml.push(\"<a:LogicalName>activityparty</a:LogicalName>\");\r\n                            xml.push(\"<a:RelatedEntities />\");\r\n                            xml.push(\"</a:Entity>\");\r\n                        }\r\n                        xml.push(\"</a:Entities>\");\r\n                        xml.push(\"<a:EntityName i:nil='true' />\");\r\n                        xml.push(\"<a:MinActiveRowVersion i:nil='true' />\");\r\n                        xml.push(\"<a:MoreRecords>false</a:MoreRecords>\");\r\n                        xml.push(\"<a:PagingCookie i:nil='true' />\");\r\n                        xml.push(\"<a:TotalRecordCount>0</a:TotalRecordCount>\");\r\n                        xml.push(\"<a:TotalRecordCountLimitExceeded>false</a:TotalRecordCountLimitExceeded>\");\r\n                        xml.push(\"</b:value>\");\r\n                        break;\r\n\r\n                    case \"EntityReference\":\r\n                        id = (attribute.hasOwnProperty(\"id\")) ? attribute[\"id\"] : attribute;\r\n                        encodedId = encodeValue(id);\r\n                        logicalName = (attribute.hasOwnProperty(\"logicalName\")) ? attribute[\"logicalName\"] : attribute;\r\n                        encodedLogicalName = encodeValue(logicalName);\r\n                        xml.push(\"<b:value i:type='a:EntityReference'>\");\r\n                        xml.push(\"<a:Id>\", encodedId, \"</a:Id>\");\r\n                        if (Xrm.Utility.openQuickCreate !== undefined) {\r\n                            xml.push(\"<a:KeyAttributes xmlns:c='http://schemas.microsoft.com/xrm/7.1/Contracts' />\");\r\n                        }\r\n                        xml.push(\"<a:LogicalName>\", encodedLogicalName, \"</a:LogicalName>\");\r\n                        xml.push(\"<a:Name i:nil='true' />\");\r\n                        if (Xrm.Utility.openQuickCreate !== undefined) {\r\n                            xml.push(\"<a:RowVersion i:nil='true' />\");\r\n                        }\r\n                        xml.push(\"</b:value>\");\r\n                        break;\r\n\r\n                    case \"Money\":\r\n                        value = (attribute.hasOwnProperty(\"value\")) ? attribute[\"value\"] : attribute;\r\n                        encodedValue = encodeValue(value);\r\n                        xml.push(\"<b:value i:type='a:Money'>\");\r\n                        xml.push(\"<a:Value>\", <string>encodedValue, \"</a:Value>\", \"</b:value>\");\r\n                        break;\r\n\r\n                    case \"guid\":\r\n                        value = (attribute.hasOwnProperty(\"value\")) ? attribute[\"value\"] : attribute;\r\n                        encodedValue = encodeValue(value);\r\n                        xml.push(\"<b:value i:type='c:guid' xmlns:c='http://schemas.microsoft.com/2003/10/Serialization/'>\");\r\n                        xml.push(<string>encodedValue, \"</b:value>\");\r\n                        break;\r\n\r\n                    case \"number\":\r\n                        value = (attribute.hasOwnProperty(\"value\")) ? attribute[\"value\"] : attribute;\r\n                        encodedValue = encodeValue(value);\r\n                        let oType: string = (parseInt(encodedValue) === encodedValue) ? \"c:int\" : \"c:decimal\";\r\n                        xml.push(\"<b:value i:type='\", oType, \"' xmlns:c='http://www.w3.org/2001/XMLSchema'>\");\r\n                        xml.push(<string>encodedValue, '</b:value>');\r\n                        break;\r\n\r\n                    default:\r\n                        value = (attribute.hasOwnProperty(\"value\")) ? attribute[\"value\"] : attribute;\r\n                        encodedValue = encodeValue(value);\r\n                        sType = (typeof value === \"object\" && value.getTime) ? \"dateTime\" : sType;\r\n                        xml.push(\"<b:value i:type='c:\", sType, \"' xmlns:c='http://www.w3.org/2001/XMLSchema'>\", <string>encodedValue, \"</b:value>\");\r\n                        break;\r\n                    }\r\n                }\r\n                xml.push(\"</a:KeyValuePairOfstringanyType>\");\r\n            }\r\n        }\r\n\r\n        xml.push(\"</a:Attributes><a:EntityState i:nil='true' />\");\r\n        xml.push(\"<a:FormattedValues xmlns:b='http://schemas.datacontract.org/2004/07/System.Collections.Generic' />\");\r\n        xml.push(\"<a:Id>\", encodeValue(this.id), \"</a:Id>\");\r\n        xml.push(\"<a:LogicalName>\", this.logicalName, \"</a:LogicalName>\");\r\n        xml.push(\"<a:RelatedEntities xmlns:b='http://schemas.datacontract.org/2004/07/System.Collections.Generic' />\");\r\n        xml.push(\"</b:value>\");\r\n        return xml.join(\"\");\r\n    }\r\n\r\n    /**\r\n    * Deserialize an XML node into a CRM Business Entity object. The XML node comes from CRM Web Service's response.\r\n    * @param {object} resultNode The XML node returned from CRM Web Service's Fetch, Retrieve, RetrieveMultiple messages.\r\n    */\r\n    deserialize(resultNode: Node) {\r\n        let obj = Object.create(null);\r\n        let resultNodes: NodeList = resultNode.childNodes;\r\n\r\n        for (let j = 0, lenj = resultNodes.length; j < lenj; j++) {\r\n            let sKey: string;\r\n            let parentNode: Node = resultNodes[j];\r\n            switch (parentNode.nodeName) {\r\n                case \"a:Attributes\":\r\n                    let attr: Node = parentNode;\r\n                    for (let k: number = 0, lenk: number = attr.childNodes.length; k < lenk; k++) {\r\n                        let tempParentNode: Node = attr.childNodes[k];\r\n                        // Establish the Key for the Attribute\r\n                        let tempParentNodeChildNodes: NodeList = tempParentNode.childNodes;\r\n                        sKey = getNodeText(tempParentNodeChildNodes[0]);\r\n\r\n                        let tempNode: Node = tempParentNodeChildNodes[1];\r\n                        // Determine the Type of Attribute value we should expect\r\n                        let sType = tempNode.attributes.getNamedItem(\"i:type\").value;\r\n\r\n                        // check for AliasedValue\r\n                        if (sType.replace('c:', '').replace('a:', '') === \"AliasedValue\") {\r\n                            // reset the type to the actual attribute type\r\n                            let subNode: Node = tempNode.childNodes[2];\r\n                            sType = subNode.attributes.getNamedItem(\"i:type\").value;\r\n\r\n                            //sKey = getNodeText(tempNode.childNodes[1]) + \".\" + getNodeText(tempNode.childNodes[0]);\r\n                            // reset the node to the AliasedValue value node\r\n                            tempNode = subNode;\r\n                        }\r\n\r\n                        let entRef: any;\r\n                        let entCv: any;\r\n                        switch (sType) {\r\n                            case \"a:OptionSetValue\":\r\n                                let entOsv: xrmOptionSetValue = new xrmOptionSetValue();\r\n                                entOsv.type = sType.replace('a:', '');\r\n                                entOsv.value = parseInt(getNodeText(tempNode));\r\n                                obj[sKey] = entOsv;\r\n                                break;\r\n\r\n                            case \"a:EntityReference\":\r\n                                entRef = new xrmEntityReference();\r\n                                entRef.type = sType.replace('a:', '');\r\n                                let oChildNodes = tempNode.childNodes;\r\n                                for (let i = 0, leni = oChildNodes.length; i < leni; i++) {\r\n                                    let entityReferenceNode = oChildNodes[i];\r\n\r\n                                    switch (entityReferenceNode.nodeName) {\r\n                                        case \"a:Id\":\r\n                                            entRef.id = getNodeText(entityReferenceNode);\r\n                                            break;\r\n                                        case \"a:LogicalName\":\r\n                                            entRef.logicalName = getNodeText(entityReferenceNode);\r\n                                            break;\r\n                                        case \"a:Name\":\r\n                                            entRef.name = getNodeText(entityReferenceNode);\r\n                                            break;\r\n                                    }\r\n                                }\r\n                                obj[sKey] = entRef;\r\n                                break;\r\n\r\n                            case \"a:EntityCollection\":\r\n                                entRef = new xrmEntityCollection();\r\n                                entRef.type = sType.replace('a:', '');\r\n\r\n                                //get all party items....\r\n                                let items: Array<xrmEntityReference> = [];\r\n                                let partyNodes = tempNode.childNodes;\r\n                                for (let y = 0, leny = partyNodes[0].childNodes.length; y < leny; y++) {\r\n                                    let itemNodes = tempParentNode.childNodes[1].childNodes[0].childNodes[y].childNodes[0].childNodes;\r\n                                    for (let z = 0, lenz = itemNodes.length; z < lenz; z++) {\r\n                                        let itemNodeChildNodes = itemNodes[z].childNodes;\r\n                                        let nodeText = getNodeText(itemNodeChildNodes[0]);\r\n                                        if (nodeText === \"partyid\") {\r\n                                            let itemRef = new xrmEntityReference();\r\n                                            let partyListNodes = itemNodeChildNodes[1].childNodes;\r\n                                            for (let pi = 0, lenpi = partyListNodes.length; pi < lenpi; pi++) {\r\n                                                let partyReferenceNode = partyListNodes[i];\r\n\r\n                                                switch (partyReferenceNode.nodeName) {\r\n                                                    case \"a:Id\":\r\n                                                        itemRef.id = getNodeText(partyReferenceNode);\r\n                                                        break;\r\n                                                    case \"a:LogicalName\":\r\n                                                        itemRef.logicalName = getNodeText(partyReferenceNode);\r\n                                                        break;\r\n                                                    case \"a:Name\":\r\n                                                        itemRef.name = getNodeText(partyReferenceNode);\r\n                                                        break;\r\n                                                }\r\n                                            }\r\n                                            items[y] = itemRef;\r\n                                        }\r\n                                    }\r\n                                }\r\n                                entRef.value = items;\r\n                                obj[sKey] = entRef;\r\n                                break;\r\n\r\n                            case \"a:Money\":\r\n                                entCv = new xrmValue();\r\n                                entCv.type = sType.replace('a:', '');\r\n                                entCv.value = parseFloat(getNodeText(tempNode));\r\n                                obj[sKey] = entCv;\r\n                                break;\r\n\r\n                            default:\r\n                                entCv = new xrmValue();\r\n                                entCv.type = sType.replace('c:', '').replace('a:', '');\r\n                                if (entCv.type === \"int\") {\r\n                                    entCv.value = parseInt(getNodeText(tempNode));\r\n                                }\r\n                                else if (entCv.type === \"decimal\" || entCv.type === \"double\") {\r\n                                    entCv.value = parseFloat(getNodeText(tempNode));\r\n                                }\r\n                                else if (entCv.type === \"dateTime\") {\r\n                                    entCv.value = stringToDate(getNodeText(tempNode));\r\n                                }\r\n                                else if (entCv.type === \"boolean\") {\r\n                                    entCv.value = (getNodeText(tempNode) === 'false') ? false : true;\r\n                                }\r\n                                else {\r\n                                    entCv.value = getNodeText(tempNode);\r\n                                }\r\n                                obj[sKey] = entCv;\r\n                                break;\r\n                        }\r\n                    }\r\n                    this.attributes = obj;\r\n                    break;\r\n\r\n                case \"a:Id\":\r\n                    this.id = getNodeText(parentNode);\r\n                    break;\r\n\r\n                case \"a:LogicalName\":\r\n                    this.logicalName = getNodeText(parentNode);\r\n                    break;\r\n\r\n                case \"a:FormattedValues\":\r\n                    let foVal = parentNode;\r\n\r\n                    for (let o = 0, leno = foVal.childNodes.length; o < leno; o++) {\r\n                        // Establish the Key, we are going to fill in the formatted value of the already found attribute\r\n                        let foNode = foVal.childNodes[o];\r\n                        sKey = getNodeText(foNode.childNodes[0]);\r\n                        this.attributes[sKey].formattedValue = getNodeText(foNode.childNodes[1]);\r\n                        if (isNaN(this.attributes[sKey].value) && this.attributes[sKey].type === \"dateTime\") {\r\n                            this.attributes[sKey].value = new Date(this.attributes[sKey].formattedValue);\r\n                        }\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function stringToDate(s: string): Date {\r\n    let b = s.split(/\\D/);\r\n    return new Date(Date.UTC(Number(b[0]), Number(b[1]) - 1, Number(b[2]), Number(b[3]), Number(b[4]), Number(b[5])));\r\n}\r\n\r\nexport function nsResolver(prefix: string): string {\r\n    const ns = new Map([\r\n        [\"s\", \"http://schemas.xmlsoap.org/soap/envelope/\"],\r\n        [\"a\", \"http://schemas.microsoft.com/xrm/2011/Contracts\"],\r\n        [\"i\", \"http://www.w3.org/2001/XMLSchema-instance\"],\r\n        [\"b\", \"http://schemas.datacontract.org/2004/07/System.Collections.Generic\"],\r\n        [\"c\", \"http://schemas.microsoft.com/xrm/2011/Metadata\"],\r\n        [\"ser\", \"http://schemas.microsoft.com/xrm/2011/Contracts/Services\"]\r\n    ]);\r\n\r\n    return ns.get(prefix) || null;\r\n};\r\n\r\nexport function isNodeNull(node: Node): boolean {\r\n    if (node == null){\r\n        return true;\r\n    }\r\n\r\n    if ((node.attributes.getNamedItem(\"i:nil\") != null) && (node.attributes.getNamedItem(\"i:nil\").value === \"true\")){\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nexport function selectNodes(node: any, xPathExpression: XPathExpression): Array<string> {\r\n    if (typeof (node.selectNodes) != \"undefined\") {\r\n        return node.selectNodes(xPathExpression);\r\n    } else {\r\n        let output: Array<string> = [];\r\n        let xPathResults = node.evaluate(xPathExpression, node, nsResolver, XPathResult.ANY_TYPE, null);\r\n        let result = xPathResults.iterateNext();\r\n        while (result) {\r\n            output.push(result);\r\n            result = xPathResults.iterateNext();\r\n        }\r\n        return output;\r\n    }\r\n}\r\n\r\nexport function selectSingleNode(node: any, xpathExpr: string) {\r\n    if (typeof (node.selectSingleNode) != \"undefined\") {\r\n        return node.selectSingleNode(xpathExpr);\r\n    } else {\r\n        let xpe: XPathEvaluator = new XPathEvaluator();\r\n        let results = xpe.evaluate(xpathExpr, node, <any>nsResolver, XPathResult.FIRST_ORDERED_NODE_TYPE, null);\r\n        return results.singleNodeValue;\r\n    }\r\n};\r\n\r\nexport function selectSingleNodeText(node: any, xpathExpr: string): string {\r\n    let x = selectSingleNode(node, xpathExpr);\r\n    if (isNodeNull(x)) {\r\n        return null;\r\n    }\r\n    if (typeof (x.text) != \"undefined\") {\r\n        return x.text;\r\n    } else {\r\n        return x.textContent;\r\n    }\r\n}\r\n\r\nexport function getNodeText(node: any): string {\r\n    if (typeof (node.text) != \"undefined\") {\r\n        return node.text;\r\n    } else {\r\n        return node.textContent;\r\n    }\r\n}\r\n\r\nexport function setSelectionNamespaces(doc: any): void {\r\n    const namespaces = [\r\n        \"xmlns:s='http://schemas.xmlsoap.org/soap/envelope/'\",\r\n        \"xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts'\",\r\n        \"xmlns:i='http://www.w3.org/2001/XMLSchema-instance'\",\r\n        \"xmlns:b='http://schemas.datacontract.org/2004/07/System.Collections.Generic'\",\r\n        \"xmlns:c='http://schemas.microsoft.com/xrm/2011/Metadata'\",\r\n        \"xmlns:ser='http://schemas.microsoft.com/xrm/2011/Contracts/Services'\"\r\n    ];\r\n\r\n    doc.setProperty(\"SelectionNamespaces\", namespaces.join(\" \"));\r\n}\r\n\r\n/**\r\n * cross browser responseXml to return a XML object\r\n *\r\n * @export\r\n * @param {string} txt Source xml string\r\n * @returns {XMLDocument} Parsed XML Document\r\n */\r\nexport function xmlParser(txt: string): XMLDocument {\r\n    let xmlDoc: DOMParser | any = null;\r\n    try {\r\n        xmlDoc = new ActiveXObject(\"Microsoft.XMLDOM\");\r\n        xmlDoc.async = false;\r\n        xmlDoc.loadXML(txt);\r\n    } catch (e) {\r\n        if (DOMParser) {\r\n            // ReSharper disable InconsistentNaming\r\n            let parser = new DOMParser();\r\n            // ReSharper restore InconsistentNaming\r\n            xmlDoc = parser.parseFromString(txt, \"text/xml\");\r\n        } else {\r\n            alertMessage(\"Cannot convert the XML string to a cross-browser XML object.\");\r\n        }\r\n    }\r\n\r\n    return xmlDoc;\r\n}\r\n\r\nexport function xmlToString(responseXml: Node): string {\r\n    var xmlString = \"\";\r\n    try {\r\n        if (responseXml != null) {\r\n            if (typeof XMLSerializer !== \"undefined\" && typeof (<any>responseXml).xml === \"undefined\") {\r\n                // ReSharper disable InconsistentNaming\r\n                xmlString = (new XMLSerializer()).serializeToString(responseXml);\r\n                // ReSharper restore InconsistentNaming\r\n            } else {\r\n                if (typeof (<any>responseXml).xml !== \"undefined\") {\r\n                    xmlString = (<any>responseXml).xml;\r\n                } else if (typeof (<any>responseXml)[0].xml !== \"undefined\") {\r\n                    xmlString = (<any>responseXml)[0].xml;\r\n                }\r\n            }\r\n        }\r\n    } catch (e) {\r\n        alertMessage(\"Cannot convert the XML to a string.\");\r\n    }\r\n    return xmlString;\r\n}\r\n\r\nfunction isArray (input: any): boolean {\r\n    return input.constructor.toString().indexOf(\"Array\") !== -1;\r\n}\r\n\r\nexport function getError(async: boolean, resp: any, internalCallback?: Function): Error {\r\n    //Error descriptions come from http://support.microsoft.com/kb/193625\r\n\r\n    if (resp.status === 12029) {\r\n        throw new Error(\"The attempt to connect to the server failed.\");\r\n    }\r\n\r\n    if (resp.status === 12007) {\r\n        throw new Error(\"The server name could not be resolved.\");\r\n    }\r\n\r\n    let faultXml = resp.responseXML;\r\n\r\n    let faultstring: string = null;\r\n    let errorCode: string = null;\r\n\r\n    let errorMessage = \"Unknown (unable to parse the fault)\";\r\n    if (faultXml !== null && typeof faultXml == \"object\") {\r\n        let bodyNode: Node = faultXml.firstChild.firstChild;\r\n\r\n        //Retrieve the fault node\r\n        for (let i = 0; i < bodyNode.childNodes.length; i++) {\r\n            let node: Node = bodyNode.childNodes[i];\r\n\r\n            //NOTE: This comparison does not handle the case where the XML namespace changes\r\n            if (\"s:Fault\" === node.nodeName) {\r\n                for (let j = 0; j < node.childNodes.length; j++) {\r\n                    let testNode: Node = node.childNodes[j];\r\n                    if (\"faultstring\" === testNode.nodeName) {\r\n                        faultstring = getNodeText(testNode);\r\n                    }\r\n                    if (\"detail\" === testNode.nodeName) {\r\n                        for (let k = 0; k < testNode.childNodes.length; k++) {\r\n                            let orgServiceFault: Node = testNode.childNodes[k];\r\n                            if (\"OrganizationServiceFault\" === orgServiceFault.nodeName) {\r\n                                for (let l = 0; l < orgServiceFault.childNodes.length; l++) {\r\n                                    var errorCodeNode: Node = orgServiceFault.childNodes[l];\r\n                                    if (\"ErrorCode\" === errorCodeNode.nodeName) {\r\n                                        errorCode = getNodeText(errorCodeNode);\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (errorCode != null && faultstring != null) {\r\n        errorMessage = \"Error Code:\" + errorCode + \" Message: \" + faultstring;\r\n    } else {\r\n        if (faultstring != null) {\r\n            errorMessage = faultstring;\r\n        }\r\n    }\r\n\r\n    if (async) {\r\n        return new Error(errorMessage);\r\n    } else {\r\n        throw new Error(errorMessage);\r\n    }\r\n}\r\n\r\nexport function doRequest (soapBody: string, requestType: string, async: boolean, internalCallback: Function): void {\r\n    async = async || false;\r\n\r\n    // Wrap the Soap Body in a soap:Envelope.\r\n    let soapXml =`\r\n    <soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">\r\n        <soap:Body>\r\n            <${requestType} xmlns=\"http://schemas.microsoft.com/xrm/2011/Contracts/Services\" xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\">${soapBody}</${requestType}>\r\n        </soap:Body>\r\n    </soap:Envelope>\r\n    `;\r\n\r\n    let req = new XMLHttpRequest();\r\n    req.open(\"POST\", orgServicePath(), async);\r\n    req.setRequestHeader(\"Accept\", \"application/xml, text/xml, */*\");\r\n    req.setRequestHeader(\"Content-Type\", \"text/xml; charset=utf-8\");\r\n    req.setRequestHeader(\"SOAPAction\", `http://schemas.microsoft.com/xrm/2011/Contracts/Services/IOrganizationService/${requestType}`);\r\n\r\n    //IE10\r\n    try {\r\n        req.responseType = 'msxml-document';\r\n    } catch (e) {\r\n    }\r\n\r\n    if (async) {\r\n        req.onreadystatechange = function () {\r\n            if (req.readyState === 4 /* complete */) {\r\n                req.onreadystatechange = null; //Addresses potential memory leak issue with IE\r\n                if (req.status === 200) { // \"OK\"\r\n                    let doc = req.responseXML;\r\n                    try {\r\n                        setSelectionNamespaces(doc);\r\n                    } catch (e) {\r\n                    }\r\n                    internalCallback(doc);\r\n                } else {\r\n                    getError(true, req);\r\n                }\r\n            }\r\n        };\r\n\r\n        req.send(soapXml);\r\n    } else {\r\n        req.send(soapXml);\r\n        if (req.status === 200) {\r\n            let doc = req.responseXML;\r\n            try {\r\n                setSelectionNamespaces(doc);\r\n            } catch (e) {\r\n            }\r\n            let result = doc;\r\n            return !!internalCallback ? internalCallback(result) : result;\r\n        } else {\r\n            getError(false, req);\r\n        }\r\n    }\r\n    // ReSharper disable NotAllPathsReturnValue\r\n}\r\n// ReSharper restore NotAllPathsReturnValue\r\n\r\n/**\r\n * Private function to return the path to the organization service\r\n *\r\n * @returns {string}\r\n */\r\nfunction orgServicePath(): string {\r\n    return `${getClientUrl()}/XRMServices/2011/Organization.svc/web`;\r\n}\r\n\r\nexport function fetchMore(fetchCoreXml: string, pageNumber: number, pageCookie: any, fetchResults: any): any {\r\n\r\n    //Build new query\r\n    let moreFetchXml = `\r\n        <fetch mapping=\"logical\" page=\"${pageNumber}\" count=\"5000\" paging-cookie=\"${pageCookie}\">\r\n            ${fetchCoreXml.replace(/\\\"/g, \"'\")}\r\n        </fetch>\r\n    `;\r\n\r\n    let moreMsgBody = `\r\n        <request i:type=\"a:RetrieveMultipleRequest\" xmlns:a=\"http://schemas.microsoft.com/xrm/2011/Contracts\">\r\n            <a:Parameters xmlns:b=\"http://schemas.datacontract.org/2004/07/System.Collections.Generic\">\r\n                <a:KeyValuePairOfstringanyType>\r\n                    <b:key>Query</b:key>\r\n                    <b:value i:type=\"a:FetchExpression\">\r\n                        <a:Query>${crmXmlEncode(moreFetchXml)}</a:Query>\r\n                    </b:value>\r\n                </a:KeyValuePairOfstringanyType>\r\n            </a:Parameters>\r\n            <a:RequestId i:nil=\"true\"/>\r\n            <a:RequestName>RetrieveMultiple</a:RequestName>\r\n        </request>\r\n    `;\r\n\r\n\r\n    return doRequest(moreMsgBody, \"Execute\", false, (moreResultXml: string) {\r\n        let newFetchResult: Node = selectSingleNode(moreResultXml, \"//a:Entities\");\r\n        let newMoreRecords: boolean = (selectSingleNodeText(moreResultXml, \"//a:MoreRecords\") === \"true\");\r\n\r\n        for (let iii = 0, nLength = newFetchResult.childNodes.length; iii < nLength; iii++) {\r\n            let entity = new businessEntity();\r\n\r\n            entity.deserialize(newFetchResult.childNodes[iii]);\r\n            fetchResults.push(entity);\r\n        }\r\n\r\n        if (newMoreRecords) {\r\n            pageNumber += 1;\r\n            let newPageCookie = selectSingleNodeText(moreResultXml, \"//a:PagingCookie\").replace(/\\\"/g, '\\'').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/'/g, '&quot;');\r\n\r\n            fetchMore(fetchCoreXml, pageNumber, newPageCookie, fetchResults);\r\n        } else {\r\n            return fetchResults;\r\n        }\r\n    });\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/HelperSoap.ts\n **/","/// <reference path=\"../typings/main.d.ts\" />\nimport {alertMessage, getClientUrl} from \"./Helper\";\n        // JQueryXrmFieldTooltip: jQueryXrmFieldTooltip,\n        // JQueryXrmDependentOptionSet: jQueryXrmDependentOptionSet,\n        // JQueryXrmCustomFilterView: jQueryXrmCustomFilterView,\n        // JQueryXrmFormatNotesControl: jQueryXrmFormatNotesControl\n\nexport default class Extension {\n    // jQuery Load Help function to add tooltip for attribute in CRM 2011. Unsupported because of the usage of DOM object edit.\n    //****************************************************\n\n    /**\n     * A generic configurable method to add tooltip to crm 2011 field.\n     *\n     * @param {string} filename A JavaScript String corresponding the name of the configuration web resource name in CRM 2011 instance\n     * @param {boolean} bDisplayImg A JavaScript boolean corresponding if display a help image for the tooltip\n     * @example\n     * JQueryLoadHelp('cm_xmlhelpfile', true);\n     */\n    static JQueryXrmFieldTooltip(filename: string, bDisplayImg: boolean): void {\n        /*\n        This function is used add tooltips to any field in CRM2011.\n\n        This function requires the following parameters:\n        filename :   name of the XML web resource\n        bDisplayImg: boolean to show/hide the help image (true/false)\n        Returns: nothing\n        Example:  jQueryLoadHelp('cm_xmlhelpfile', true);\n        Designed by: http://lambrite.com/?p=221\n        Adapted by Geron Profet (www.crmxpg.nl), Jaimie Ji\n        Modified by Jaimie Ji with jQuery and cross browser\n        */\n\n        if (Xrm.Page.ui.setFormNotification !== undefined) {\n            alertMessage(\"XrmServiceToolkit.Extension.JQueryXrmFieldTooltip is not supported in CRM2013.\\nPlease use the out of box functionality\");\n            return;\n        }\n\n        if (typeof jQuery === \"undefined\") {\n            let errorMessage = (\"jQuery is not loaded.\\nPlease ensure that jQuery is included\\n as web resource in the form load.\");\n            alertMessage(errorMessage);\n            return;\n        }\n\n        /**\n         * Appends a help tooltip to an attribute\n         *\n         * @param {string} entity Entityname\n         * @param {string} attr Attributename\n         * @param {string} txt Help description\n         */\n        function registerHelp(entity: string, attr: string, txt:string): void {\n            let obj = jQuery(\"#\" + attr + \"_c\").children(\":first\");\n            if (obj != null) {\n                let html = `\n                    <img id=\"img_${attr}\" src=\"/_imgs/ico/16_help.gif\" alt=\"${txt}\" width=\"16\" height=\"16\" /><div id=\"help_${attr}\" style=\"visibility: hidden; position: absolute;\">: ${txt}</div>\n                `;\n                jQuery(obj).append(html);\n                // 20110909 GP: added line to hide/show help image\n                jQuery(\"#img_\" + attr).css(\"display\", (bDisplayImg) ? \"inline\" : \"none\");\n            }\n        }\n\n        // ****************************************************\n        function parseHelpXml(data: any): void {\n            let entity = Xrm.Page.data.entity.getEntityName().toString().toLowerCase();\n            let entXml = jQuery(\"entity[name=\" + entity + \"]\", data);\n            jQuery(entXml).children().each(() => {\n                let attr = jQuery(this).attr(\"name\");\n                let txt = jQuery(this).find(\"shorthelp\").text();\n                registerHelp(entity, attr, txt);\n            });\n        }\n\n        jQuery.support.cors = true;\n\n        jQuery.ajax({\n            type: \"GET\",\n            url: getClientUrl() + \"/WebResources/\" + filename,\n            dataType: \"xml\",\n            success: parseHelpXml,\n            // ReSharper disable UnusedParameter\n            error: (xmlHttpRequest, textStatus, errorThrown) => {\n                // ReSharper restore UnusedParameter\n                alertMessage(\"Something is wrong to setup the tooltip for the fields. Please contact your administrator\");\n            }\n        }); // end Ajax\n    }\n\n    // Generic Dependent Option Set Function. Changed from CRM 2011 SDK example\n    /**\n     * A generic configurable method to configure dependent optionset for CRM 2011 instance\n     *\n     * @param {string} filename A JavaScript String corresponding the name of the configuration web resource name in CRM 2011 instance\n     */\n    static JQueryXrmDependentOptionSet(filename: string): void {\n        if (typeof jQuery === \"undefined\") {\n            alertMessage(\"jQuery is not loaded.\\nPlease ensure that jQuery is included\\n as web resource in the form load.\");\n            return;\n        }\n\n        // This is the function set on the OnChange event for\n        // parent fields.\n        // ReSharper disable DuplicatingLocalDeclaration\n        function filterDependentField(parentField: string, childField: string, jQueryXrmDependentOptionSet: Xrm.Page.OptionSetAttribute) {\n            // ReSharper restore DuplicatingLocalDeclaration\n            for (let depOptionSet in this.JQueryXrmDependentOptionSet.config) {\n                if (this.JQueryXrmDependentOptionSet.config.hasOwnProperty(depOptionSet)) {\n                    let dependentOptionSet = this.JQueryXrmDependentOptionSet.config[depOptionSet];\n                    /* Match the parameters to the correct dependent optionset mapping*/\n                    if ((dependentOptionSet.parent === parentField) && (dependentOptionSet.dependent === childField)) {\n                        /* Get references to the related fields*/\n                        let parent: Xrm.Page.OptionSetAttribute = <Xrm.Page.OptionSetAttribute>Xrm.Page.data.entity.attributes.get(parentField);\n                        let child: Xrm.Page.OptionSetAttribute = <Xrm.Page.OptionSetAttribute>Xrm.Page.data.entity.attributes.get(childField);\n\n                        let parentControl = Xrm.Page.getControl(parentField);\n                        let childControl = Xrm.Page.getControl(childField);\n                        /* Capture the current value of the child field*/\n                        let currentChildFieldValue = (<Xrm.Page.OptionSetAttribute>child).getValue();\n\n                        /* If the parent field is null the Child field can be set to null */\n                        let controls: Array<Xrm.Page.Control>;\n                        let ctrl: string;\n                        if (parent.getValue() === null) {\n                            child.setValue(null);\n                            child.setSubmitMode(\"always\");\n                            child.fireOnChange();\n\n                            // Any attribute may have any number of controls,\n                            // so disable each instance.\n                            controls = child.controls.get();\n                            for (ctrl in controls) {\n                                if (controls.hasOwnProperty(ctrl)) {\n                                    controls[ctrl].setDisabled(true);\n                                }\n                            }\n                            return;\n                        }\n\n                        for (let os in dependentOptionSet.options) {\n                            if (dependentOptionSet.options.hasOwnProperty(os)) {\n                                let options = dependentOptionSet.options[os];\n                                let optionsToShow = options.showOptions;\n                                /* Find the Options that corresponds to the value of the parent field. */\n                                if (parent.getValue().toString() === options.value.toString()) {\n                                    controls = child.controls.get(); /*Enable the field and set the options*/\n                                    for (ctrl in controls) {\n                                        if (controls.hasOwnProperty(ctrl)) {\n                                            controls[ctrl].setDisabled(false);\n                                            (<Xrm.Page.OptionSetControl>controls[ctrl]).clearOptions();\n\n                                            for (let option in optionsToShow) {\n                                                if (optionsToShow.hasOwnProperty(option)) {\n                                                    (<Xrm.Page.OptionSetControl>controls[ctrl]).addOption(optionsToShow[option]);\n                                                }\n                                            }\n                                        }\n                                    }\n                                    /*Check whether the current value is valid*/\n                                    let bCurrentValueIsValid = false;\n                                    let childFieldOptions = optionsToShow;\n\n                                    for (let validOptionIndex in childFieldOptions) {\n                                        if (childFieldOptions.hasOwnProperty(validOptionIndex)) {\n                                            let optionDataValue = childFieldOptions[validOptionIndex].value;\n\n                                            if (currentChildFieldValue === parseInt(optionDataValue)) {\n                                                bCurrentValueIsValid = true;\n                                                break;\n                                            }\n                                        }\n                                    }\n                                    /*\n                            If the value is valid, set it.\n                            If not, set the child field to null\n                            */\n                                    if (bCurrentValueIsValid) {\n                                        child.setValue(currentChildFieldValue);\n                                    } else {\n                                        child.setValue(null);\n                                    }\n                                    child.setSubmitMode(\"always\");\n                                    child.fireOnChange();\n\n                                    if (parentControl.getDisabled() === true) {\n                                        childControl.setDisabled(true);\n                                    }\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        /**\n         * Initialize optionsets\n         *\n         * @param {*} data (description)\n         */\n        function init(data: any): void {\n            let entity: string = Xrm.Page.data.entity.getEntityName().toString().toLowerCase();\n            let configWr: JQuery = jQuery(\"entity[name=\" + entity + \"]\", data);\n\n            // Convert the XML Data into a JScript object.\n            let parentFields: JQuery = configWr.children(\"ParentField\");\n            let jsConfig: Array<any> = [];\n            for (let i = 0, ilength = parentFields.length; i < ilength; i++) {\n                let node = parentFields[i];\n                let mapping: any = {};\n                mapping.parent = jQuery(node).attr(\"id\");\n                mapping.dependent = jQuery(node).children(\"DependentField:first\").attr(\"id\");\n                mapping.options = [];\n                let options = jQuery(node).children(\"Option\");\n                for (let a = 0, alength = options.length; a < alength; a++) {\n                    let option: any = {};\n                    option.value = jQuery(options[a]).attr(\"value\");\n                    option.showOptions = [];\n                    let optionsToShow = jQuery(options[a]).children(\"ShowOption\");\n                    for (let b = 0, blength = optionsToShow.length; b < blength; b++) {\n                        let optionToShow: any = {};\n                        optionToShow.value = jQuery(optionsToShow[b]).attr(\"value\");\n                        optionToShow.text = jQuery(optionsToShow[b]).attr(\"label\"); // Label is not used in the code.\n\n                        option.showOptions.push(optionToShow);\n                    }\n                    mapping.options.push(option);\n                }\n                jsConfig.push(mapping);\n            }\n            // Attach the configuration object to jQueryXrmDependentOptionSet\n            // so it will be available for the OnChange events.\n            this.JQueryXrmDependentOptionSet.config = jsConfig;\n\n            // Fire the OnChange event for the mapped optionset fields\n            // so that the dependent fields are filtered for the current values.\n            for (let depOptionSet in this.JQueryXrmDependentOptionSet.config) {\n                if (this.JQueryXrmDependentOptionSet.config.hasOwnProperty(depOptionSet)) {\n                    let parent = this.JQueryXrmDependentOptionSet.config[depOptionSet].parent;\n                    let child = this.JQueryXrmDependentOptionSet.config[depOptionSet].dependent;\n                    filterDependentField(parent, child, this.JQueryXrmDependentOptionSet);\n                }\n            }\n        }\n\n        jQuery.support.cors = true;\n\n        jQuery.ajax({\n            type: \"GET\",\n            url: getClientUrl() + \"/WebResources/\" + filename,\n            dataType: \"xml\",\n            success: init,\n            // ReSharper disable UnusedParameter\n            error: (xmlHttpRequest, textStatus, errorThrown) => {\n                // ReSharper restore UnusedParameter\n                alertMessage(\"Something is wrong to setup the dependent picklist. Please contact your administrator\");\n            }\n        }); // end Ajax\n    };\n\n    /**\n     * (A generic configurable method to add custom filter view to lookup field in crm 2011 instance\n     *\n     * @param {string} filename A JavaScript String corresponding the name of the configuration web resource name in CRM 2011 instance\n     */\n    static JQueryXrmCustomFilterView(filename: string): void {\n        if (typeof jQuery === \"undefined\") {\n            alertMessage(\"jQuery is not loaded.\\nPlease ensure that jQuery is included\\n as web resource in the form load.\");\n            return;\n        }\n\n        function setCustomFilterView(target: string, entityName: string, viewName: string, fetchXml: string, layoutXml: string): void {\n            // use randomly generated GUID Id for our new view\n            let viewId: string = \"{1DFB2B35-B07C-44D1-868D-258DEEAB88E2}\";\n\n            // add the Custom View to the indicated [lookupFieldName] Control\n            Xrm.Page.getControl<Xrm.Page.LookupControl>(target).addCustomView(viewId, entityName, viewName, fetchXml, layoutXml, true);\n        }\n\n        function xmlToString(responseXml: Node): string {\n            let xmlString = \"\";\n            try {\n                if (responseXml != null) {\n                    if (typeof XMLSerializer !== \"undefined\" && typeof (<any>responseXml).xml === \"undefined\") {\n                        // ReSharper disable InconsistentNaming\n                        xmlString = (new XMLSerializer()).serializeToString(responseXml);\n                        // ReSharper restore InconsistentNaming\n                    } else {\n                        if (typeof (<any>responseXml).xml !== \"undefined\") {\n                            xmlString = responseXml.xml;\n                        }\n                        else if (typeof (<any>responseXml)[0].xml !== \"undefined\") {\n                            xmlString = (<any>responseXml)[0].xml;\n                        }\n\n                    }\n                }\n            } catch (e) {\n                alertMessage(\"Cannot convert the XML to a string.\");\n            }\n            return xmlString;\n        }\n\n        function init(data: any): void {\n            let entity: string = Xrm.Page.data.entity.getEntityName().toString().toLowerCase();\n            let configWr: JQuery = jQuery(\"entity[name=\" + entity + \"]\", data);\n\n            // Convert the XML Data into a JScript object.\n            let targetFields = configWr.children(\"TargetField\");\n            let jsConfig: Array<any> = [];\n            for (let i = 0, ilength = targetFields.length; i < ilength; i++) {\n                let node: JQuery = targetFields[i];\n                let mapping: any = {};\n                mapping.target = jQuery(node).attr(\"id\");\n                mapping.entityName = jQuery(node).attr(\"viewentity\");\n                mapping.viewName = jQuery(node).attr(\"viewname\");\n                mapping.dynamic = jQuery(node).children(\"dynamic\").children();\n                mapping.fetchXml = xmlToString(jQuery(node).children(\"fetch\"));\n                mapping.layoutXml = xmlToString(jQuery(node).children(\"grid\"));\n\n                jsConfig.push(mapping);\n            }\n            // Attach the configuration object to JQueryCustomFilterView\n            // so it will be available for the OnChange events.\n            this.JQueryXrmCustomFilterView.config = jsConfig;\n\n            // Fire the OnChange event for the mapped fields\n            // so that the lookup dialog are changed with the filtered view for the current values.\n            for (let customFilterView in this.JQueryXrmCustomFilterView.config) {\n                if (this.JQueryXrmCustomFilterView.config.hasOwnProperty(customFilterView)) {\n                    let target = this.JQueryXrmCustomFilterView.config[customFilterView].target;\n                    let entityName = this.JQueryXrmCustomFilterView.config[customFilterView].entityName;\n                    let viewName = this.JQueryXrmCustomFilterView.config[customFilterView].viewName;\n                    let dynamic = this.JQueryXrmCustomFilterView.config[customFilterView].dynamic;\n                    let fetchXml = this.JQueryXrmCustomFilterView.config[customFilterView].fetchXml;\n                    let layoutXml = this.JQueryXrmCustomFilterView.config[customFilterView].layoutXml;\n\n                    // TODO: Adding logics for various field and conditions. More tests required.\n                    if (dynamic != null) {\n                        for (let a = 0, alength = dynamic.length; a < alength; a++) {\n                            let dynamicControlType = Xrm.Page.getControl(jQuery(dynamic).attr(\"name\")).getControlType();\n                            let fieldValueType = jQuery(dynamic).attr(\"fieldvaluetype\"); // for optionset, name might be used to filter\n                            if ((<any>Xrm).Page.getAttribute(jQuery(dynamic).attr(\"name\")).getValue() === null) {\n                                alertMessage(jQuery(dynamic).attr(\"name\") + \" does not have a value. Please put validation logic on the field change to call this function. Only use XrmServiceToolkit.Extension.JQueryXrmCustomFilterView when the field has a value.\");\n                                return;\n                            }\n                            let dynamicValue: any = null;\n                            switch (dynamicControlType) {\n                            case \"standard\":\n                                dynamicValue = (<any>Xrm).Page.getAttribute(jQuery(dynamic).attr(\"name\")).getValue();\n                                break;\n                            case \"optionset\":\n                                dynamicValue = (fieldValueType != null && fieldValueType === \"label\") ? (<any>Xrm).Page.getAttribute(jQuery(dynamic).attr(\"name\")).getSelectionOption().text : (<any>Xrm).Page.getAttribute(jQuery(dynamic).attr(\"name\")).getValue();\n                                break;\n                            case \"lookup\":\n                                dynamicValue = (fieldValueType != null && fieldValueType === \"name\") ? (<any>Xrm).Page.getAttribute(jQuery(dynamic).attr(\"name\")).getValue()[0].name : (<any>Xrm).Page.getAttribute(jQuery(dynamic).attr(\"name\")).getValue()[0].id;\n                                break;\n                            default:\n                                alertMessage(jQuery(dynamic).attr(\"name\") + \" is not supported for filter lookup view. Please change the configuration.\");\n                                break;\n                            }\n\n                            let operator = jQuery(dynamic).attr(\"operator\");\n                            if (operator === null) {\n                                alertMessage(\"operator is missing in the configuration file. Please fix the issue\");\n                                return;\n                            }\n                            let dynamicString = jQuery(dynamic).attr(\"fetchnote\");\n                            switch (operator.toLowerCase()) {\n                            case \"contains\":\n                            case \"does not contain\":\n                                dynamicValue = \"%\" + dynamicValue + \"%\";\n                                break;\n                            case \"begins with\":\n                            case \"does not begin with\":\n                                dynamicValue = dynamicValue + \"%\";\n                                break;\n                            case \"ends with\":\n                            case \"does not end with\":\n                                dynamicValue = \"%\" + dynamicValue;\n                                break;\n                            default:\n                                break;\n                            }\n\n                            fetchXml = fetchXml.replace(dynamicString, dynamicValue);\n                        }\n                    }\n\n                    // replace the values if required\n                    setCustomFilterView(target, entityName, viewName, fetchXml, layoutXml);\n                }\n            }\n        }\n\n        jQuery.support.cors = true;\n\n        jQuery.ajax({\n            type: \"GET\",\n            url: getClientUrl() + \"/WebResources/\" + filename,\n            dataType: \"xml\",\n            success: init,\n            // ReSharper disable UnusedParameter\n            error: (xmlHttpRequest, textStatus, errorThrown) => {\n                // ReSharper restore UnusedParameter\n                alertMessage(\"Something is wrong to setup the custom filter view. Please contact your administrator\");\n            }\n        }); // end Ajax\n\n    };\n\n    // Disable or Enable to insert/edit note for entity. Unsupported because of DOM object edit\n    /**\n     * A generic configurable method to format the note control in crm 2011 instance\n     *\n     * @param {boolean} allowInsert A JavaScript boolean to format if the note control allow insert\n     * @param {boolean} allowEdit A JavaScript boolean to format if the note control allow edit\n     */\n    static JQueryXrmFormatNotesControl(allowInsert: boolean, allowEdit: boolean): void {\n        if (Xrm.Page.ui.setFormNotification !== undefined) {\n            alertMessage(\"XrmServiceToolkit.Extension.JQueryXrmFormatNotesControl is not supported in CRM2013\");\n            return;\n        }\n\n        if (typeof jQuery === \"undefined\") {\n            alertMessage(\"jQuery is not loaded.\\nPlease ensure that jQuery is included\\n as web resource in the form load.\");\n            return;\n        }\n\n        jQuery.support.cors = true;\n\n        let notescontrol = jQuery(\"#notescontrol\");\n        if (notescontrol === null || notescontrol === undefined) return;\n        let url = notescontrol.attr(\"url\");\n        if (url != null) {\n            if (!allowInsert) {\n                url = url.replace(\"EnableInsert=true\", \"EnableInsert=false\");\n            } else if (!allowEdit) {\n                url = url.replace(\"EnableInlineEdit=true\", \"EnableInlineEdit=false\");\n            }\n            notescontrol.attr(\"url\", url);\n        } else {\n            let src = notescontrol.attr(\"src\");\n            if (src != null) {\n                if (!allowInsert) {\n                    src = src.replace(\"EnableInsert=true\", \"EnableInsert=false\");\n                } else if (!allowEdit) {\n                    src = src.replace(\"EnableInlineEdit=true\", \"EnableInlineEdit=false\");\n                }\n                notescontrol.attr(\"src\", src);\n            }\n        }\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/Extension.ts\n **/"],"sourceRoot":""}